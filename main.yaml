openapi: 3.0.0
info:
  title: Agri Stack APIs
  description: |
        **All APIs should be implemented as RESTful API**  
        The following table displays all available Use Cases and their respective request and response schemas of Agri Stack APIs. Please click the Schema ID to view the respective schema:
     
        | Use Case Name | Mapper ID | Input Schema ID | Output Schema ID | Description                                         |               
        |---------------|-----------|-----------------|------------------|-----------------------------------------------------|
        |UPAG|<a href="https://ufsi.agristack.gov.in/apispecs#tag/Crop-Area-(i5:o5)" target="_blank">i5:o5</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Area-Query-i5" target="_blank">i5</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Area-Data-o5" target="_blank">o5</a>| State Wise Crop Sown Area Data based on Season, Year and State LGD Code|
        |UPAG V1|<a href="https://ufsi.agristack.gov.in/apispecs#tag/Crop-Area-(i5:o5v1)" target="_blank">i5:o5v1</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Area-Query-i5" target="_blank">i5</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Area-Data-V1-o5v1" target="_blank">o5v1</a>| State Wise Crop Sown Area Data based on Season, Year and State LGD Code **along with survey area details**|
        |E-Procurement|<a href="https://ufsi.agristack.gov.in/apispecs#tag/e-Procurement-(i7:o9)" target="_blank">i7:o9</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/E-procurement-Query-i7" target="_blank">i7</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/E-procurement-Data-o9" target="_blank">o9</a>|Provides Crop Sown and Land Details of a particular Land Code|
        |Soil Health|<a href="https://ufsi.agristack.gov.in/apispecs#tag/Soil-Health-(i2-o14)" target="_blank">i2:o14</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Sown-Query-i2" target="_blank">i2</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Soil-Health-Data-o14" target="_blank">o14</a>| Provides Details of a Plot along with plot geometry|
        |Farmer Loan|<a href="https://ufsi.agristack.gov.in/apispecs#tag/Farmer-Loan-(i12-o17)" target="_blank">i12:o17</a>| <a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Farmer-ID-i12" target="_blank">i12</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Farmer-Data-o17" target="_blank">o17</a>|Provides farmer details for loan processing|
        |Unified Land Data|<a href="https://ufsi.agristack.gov.in/apispecs#tag/Unified-Land-Data-(i10-012)" target="_blank">i10:o12</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Land-Data-Query-i10" target="_blank">i10</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Land-Data-Output-o12" target="_blank">o12</a>|Provides Unified Land Owner Details of a Land ID/Survey Number|
        |Farmer Details|<a href="https://ufsi.agristack.gov.in/apispecs#tag/Farmer-Details-(i2-o16)" target="_blank">i2:o16</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Sown-Query-i2" target="_blank">i2</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Complete-Farmer-Details-o16" target="_blank">o16</a>|Provides Complete farmer details with his Land and Crop Details|
        |Get Survey Numbers |<a href="https://ufsi.agristack.gov.in/apispecs#tag/Get-Survey-Numbers-(i11-o15)" target="_blank">i11:o15</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Get-Survey-Numbers-Query-i11" target="_blank">i11</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Get-Survey-Numbers-Data-o15" target="_blank">o15</a>|Provides Complete Survey Numbers and its Sub Survey Numbers basis the prefix if a survey number|
        |Price Support Scheme |<a href="https://ufsi.agristack.gov.in/apispecs#tag/Price-Support-Scheme-(i9-o11)" target="_blank">i9:o11</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Price-Support-Scheme-Query-i9" target="_blank">i9</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Price-Support-Scheme-Data-o11" target="_blank">o11</a>|Provides Crop Wise Farmer Names in a Survey Number|
        |Land Data based on Name Match |<a href="https://ufsi.agristack.gov.in/apispecs#tag/Land-Data-based-on-Aadhaar-(i1:o1)" target="_blank">i1:o1</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Farmer-Query-i1" target="_blank">i1</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Land-Data-based-on-Aadhaar-o1" target="_blank">o1</a>|Provides owner details of a land parcel based on Aadhaar details|
        |Farmer ID from State Core |<a href="https://ufsi.agristack.gov.in/apispecs#tag/Farmer-ID-from-State-(i4:o4)" target="_blank">i4:o4</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Farmer-ID-Query-i4" target="_blank">i4</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Farmer-ID-Output-o4" target="_blank">o4</a>|Provides Farmer ID and its status at the State Core against encrypted Aadhaar|  
        |Anonymised Crop Sown Data |<a href="https://ufsi.agristack.gov.in/apispecs#tag/Crop-Sown-Anonymised-Data-(i6:o2)" target="_blank">i6:o2</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Sown-Anonymised-Query-i6" target="_blank">i6</a>|<a href="https://ufsi.agristack.gov.in/apispecs/index4.html#tag/Crop-Sown-Anonymised-Data-o2" target="_blank">o2</a>|Provides anonymised crop sown details at village level|  
          
        The following are some common mappers providing Farmer's Demographic, Crop Sown and Land Asset data.  
        
        | Mapper ID   |Farmer Data  | Land Data | Crop Data | Description                                                                       |
        |-------------|-------------|-----------|-----------|-----------------------------------------------------------------------------------|
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1001" target="_blank">i1001</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1001" target="_blank">o1001</a> |      Y      |     N     |     N     | Farmer Data based on Farmer ID                                                    |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1002" target="_blank">i1002</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1001" target="_blank">o1001</a> |      Y      |     N     |     N     | Farmer Data based on Aadhaar                                                      |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1001" target="_blank">i1001</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1002" target="_blank">o1002</a> |      N      |     Y     |     N     | Land Data based on Farmer ID                                                      |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1003" target="_blank">i1003</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1002" target="_blank">o1002</a> |      N      |     Y     |     N     | Land Data based on Village LGD Code and Survey Number                             |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1004" target="_blank">i1004</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1003" target="_blank">o1003</a> |      N      |     N     |     Y     | Crop Data based on Farmer ID, Year and Season                                     |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1005" target="_blank">i1005</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1003" target="_blank">o1003</a> |      N      |     N     |     Y     | Crop Data based on Village LGD Code, Survey Number, Year and Season               |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1001" target="_blank">i1001</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1004" target="_blank">o1004</a> |      Y      |     Y     |     N     | Farmer Data and Land Data based on Farmer ID                                      |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1002" target="_blank">i1002</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1004" target="_blank">o1004</a> |      Y      |     Y     |     N     | Farmer Data and Land Data based on Aadhaar                                        |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1004" target="_blank">i1004</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1005" target="_blank">o1005</a> |      Y      |     N     |     Y     | Farmer Data and Crop Data based on Farmer ID, Year and Season                     |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1004" target="_blank">i1004</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1006" target="_blank">o1006</a> |      N      |     Y     |     Y     | Land data and crop data based on Farmer ID, Year and Season                       |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1005" target="_blank">i1005</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1006" target="_blank">o1006</a> |      N      |     Y     |     Y     | Land data and Crop data based on Village LGD Code, Survey Number, Year and Season |
        | <a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/i1004" target="_blank">i1004</a>:<a href="https://ufsi.agristack.gov.in/apispecs/index2.html#tag/o1007" target="_blank">o1007</a> |      Y      |     Y     |     Y     | Farmer data, Land data and Crop data based on Farmer ID, Year and Season          |
  version: 1.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/AgriStack/1.0.0
tags:
  - name: Agri Stack APIs
    description: Secured calls for Farmer Details, Cropsown details and his land data.           
  - name: Farmer ID from State (i4:o4)
    x-dispalyName: Farmer ID from State (i4:o4)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_farmer_id_v0_get_data"/> 
  - name: Price Support Scheme (i9-o11)
    x-displayName: Price Support Scheme (i9-o11)
    description: |
       Unique Mapper ID - i9:o11
       <SchemaDefinition schemaRef="#/components/schemas/agristack_price_support_scheme_v0_get_data" /> 
  - name: Soil Health (i2-o14)
    x-displayName: Soil Health (i2-o14)
    description: |
        Unique Mapper ID - i2:o14
        <SchemaDefinition schemaRef="#/components/schemas/agristack_soil_health_v0_get_data" /> 
  - name: e-Procurement (i7:o9)
    x-displayName: e-Procurement (i7:o9)
    description: |
       Unique Mapper ID - i7:o9
       <SchemaDefinition schemaRef="#/components/schemas/agristack_eprocurement_v0_get_data" />
  - name: Get Survey Numbers / (i11-o15)
    x-displayName: Get Survey Numbers / (i11-o15)
    description: |
        Unique Mapper ID - i11-o15
        <SchemaDefinition schemaRef="#/components/schemas/agristack_get_survey_number_v0_get_data" />
  - name: Get Survey Numbers Data / o15
    x-displayName: Get Survey Numbers Data / o15
    description: |
        Unique Schema ID - o15
        <SchemaDefinition schemaRef="#/components/schemas/agristack_get_survey_number_v0_data" />
  - name: Farmer Details (i2-o16)
    x-displayName: Farmer Details (i2-o16)
    description: |
        Unique Mapper ID - i2:o16
        <SchemaDefinition schemaRef="#/components/schemas/agristack_get_farmer_details_v0_data"/>
  - name: Unified Land Data (i10-012)
    x-displayName: Unified Land Data (i10-012)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_land_data_v0_get_data"/>
  - name: Farmer Loan (i12 - o17)
    x-dispalyName: Farmer Loan (i12 - o17)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_loan_v0_get_data"/>
  - name: Get Survey Numbers (i11-o15)
    x-dispalyName: Get Survey Numbers (i11-o15)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_get_survey_number_v0_get_data"/> 
  - name: Crop Area (i5:o5)
    x-dispalyName: Crop Area (i5:o5)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_croparea_v0_get_data"/> 
  - name: Crop Area (i5:o5v1)
    x-dispalyName: Crop Area (i5:o5v1)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_croparea_v1_get_data"/> 
  - name: Land Data based on Aadhaar (i1:o1)
    x-dispalyName: Land Data based on Aadhaar (i1:o1)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_v0_get_farmer_data"/> 
  - name: Crop Sown Anonymised Data (i6:o2)
    x-dispalyName: Crop Sown Anonymised Data (i6:o2)
    description: |
        <SchemaDefinition schemaRef="#/components/schemas/agristack_crop_v0_get_data"/> 
  - name: Network Manager
    description: Network Manager (NM) APIs
  - name: Agricultural Information Provider
    description: Agricultural Information Provider (AIP) APIs
  - name: Consent Manager
    description: Consent Manager (CM) APIs
  - name: Agricultural Information User
    description: Agricultural Information User (AIU) APIs
  - name: ROR Data API
    description: ROR Data API
  - name: Crop Survey Data API
    description: Crop Survey Data from state owned survey system to state Agri Stack.
x-tagGroups:
  - name: API Definitions
    tags:
      - Agri Stack APIs
      - Network Manager
      - Agricultural Information Provider
      - Consent Manager
      - Agricultural Information User
      - ROR Data API
      - Crop Survey Data API
  - name: Use Case Names
    tags:
      - Farmer ID from State (i4:o4)
      - Crop Area (i5:o5)
      - Crop Area (i5:o5v1)
      - e-Procurement (i7:o9)
      - Price Support Scheme (i9-o11)
      - Soil Health (i2-o14)
      - Get Survey Numbers (i11-o15)
      - Farmer Details (i2-o16)
      - Unified Land Data (i10-012)
      - Farmer Loan (i12 - o17)
      - Land Data based on Aadhaar (i1:o1)
      - Crop Sown Anonymised Data (i6:o2)
paths:
  /agristack/seek:
    post:
      tags:
        - Agri Stack APIs
      summary: 'AGRISTACK-SEEK : /agristack/seek'
      description: Search details in Farmer/Geo Reference Village Maps/Crop Sown registry using key identifiers
      operationId: post_agristack_seek
      parameters:
        - name: sender_id
          description: 'UUID - Participant ID of the consumer of this API as received from Agri Stack Network Manager'
          in: header
          required: false
          schema:
            type: string
            example: 'dd6d26eb-8eee-4a8c-bc6a-fd7771576061'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/msg_signature'
                header:
                  $ref: '#/components/schemas/msg_header'
                message:
                   $ref: '#/components/schemas/search_request'
              required:
                - header
                - message
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/msg_header'
                - $ref: '#/components/schemas/FileInfoRequest'
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - authorization: []
      deprecated: false
  /agristack/on-seek:
    post:
      summary: 'AGRISTACK-ON-SEEK : /agristack/on-seek'
      tags:
        - Agri Stack APIs
      description: Search results through callback
      operationId: post_agristack_on-seek
      parameters:
        - name: sender_id
          description: 'UUID - Participant ID of the consumer of this API as received from Agri Stack Network Manager'
          in: header
          required: false
          schema:
            type: string
            example: 'dd6d26eb-8eee-4a8c-bc6a-fd7771576061'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/msg_signature'
                header:
                  $ref: '#/components/schemas/msg_callback_header'
                message:
                  type: object
                  oneOf:
                      - $ref: '#/components/schemas/search_response'
              required:
                - header
                - message
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/msg_callback_header'
                - $ref: '#/components/schemas/FileInfoResponse'
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - authorization: []
      deprecated: false
  /agristack/verify-land:
    post:
      summary: 'AGRISTACK-VERIFY-LAND : /agristack/verify-land'
      tags:
        - Agri Stack APIs
      description: Sync API to validate land.
      operationId: post_agristack_verify_land
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agristack_land_validation_v0_query'
      responses:
        default:
           description: 'search response'
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/agristack_land_validation_v0_data'        
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
      security:
        - authorization: []
      deprecated: false    
  /agristack/get-farmer-id:
    post:
      summary: 'AGRISTACK-GET-FARMER-ID : /agristack/get-farmer-id'
      tags:
        - Agri Stack APIs
      description: Sync API to get Farmer IDs through Aadhaar Hash.
      operationId: post_agristack_get_farmer_id
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                 - header
                 - message
              properties:
                  header:
                    type: object
                    required:
                        - sender_id
                        - receiver_id
                    properties:
                      version:
                          description: 'Messaging protocol specification version being used'
                          type: string
                          example: 0.1.0
                      sender_id:
                        description: 'Sender id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
                        type: string
                        example: '9d10494b-a217-4c7a-89e8-410d6f135gt6'
                      receiver_id:
                          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
                          type: string
                          example: '9d10494b-a217-4c7a-89e8-410d6f135uy6'
                  message:
                    type: object
                    required:
                      - transaction_id
                      - encrypted_aadhaar
                    properties:
                      transaction_id:
                          description: 'Unique transaction_id (uuid)set by txn initiating system (i.e sender) to co-relate requests across processing systems/service end points'
                          type: string
                          maxLength: 99
                          example: '9d10494b-a217-4c7a-89e8-410d6f135bv7'
                      encrypted_aadhaar:
                          description: |
                            1. AIU needs to encrypt the Aadhaar using the Public Key of the central core (provided during the integration process with the encryption code) and share the encrypted aadhaar in the api request.
                            2. Central Core will decrypt the Encrypted Aadhaar using their private key corresponding to the Public Key and response back with the corresponding Farmer ID.                            
                          example: 'dff7b2676e23e0ce14d9f27d07ad525bcc2c870146a79d22dd62c702678acfc9'
                          type: string     
      responses:
        default:
           description: 'search response'
           content:
            application/json:
              schema:
                type: object
                required: 
                   - header
                   - message
                properties:
                  header:
                    type: object
                    required:
                        - sender_id
                        - receiver_id
                    properties:
                      version:
                          description: 'Messaging protocol specification version being used'
                          type: string
                          example: 0.1.0
                      sender_id:
                        description: 'Sender id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
                        type: string
                        example: '9d10494b-a217-4c7a-89e8-410d6f135uy6'
                      receiver_id:
                          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
                          type: string
                          example: '9d10494b-a217-4c7a-89e8-410d6f135gt6'       
                  message:
                    type: object
                    required:
                       - status
                       - transaction_id
                    properties:
                      status:
                        type: string
                        description: |
                          1. ACK: If the request is valid (for basic checks).
                          2. ERR: If the request is invalid and reciver can't process the request. error object holds error code, message.
                        enum:
                          - ACK
                          - ERR
                      timestamp:
                        $ref: '#/components/schemas/timestamp'
                      error:
                        $ref: '#/components/schemas/error'
                      transaction_id:
                          description: 'Unique transaction_id (uuid)set by txn initiating system (i.e sender) to co-relate requests across processing systems/service end points'
                          type: string
                          maxLength: 99
                          example: '9d10494b-a217-4c7a-89e8-410d6f135bv7'
                      encrypted_aadhaar:
                          description: |
                            1. AIU needs to encrypt the Aadhaar using the Public Key of the central core (provided during the integration process with the encryption code) and share the encrypted aadhaar in the api request.
                            2. Central Core will decrypt the Encrypted Aadhaar using their private key corresponding to the Public Key and response back with the corresponding Farmer ID.                          
                          example: 'dff7b2676e23e0ce14d9f27d07ad525bcc2c870146a79d22dd62c702678acfc9'
                          type: string     
                      farmer_id:
                        description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
                        type: string
                        example: '12341234123'      
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
      security:
        - authorization: []
      deprecated: false    
  /agristack/farmer-loan:
    post:
      summary: 'AGRISTACK-FARMER-LOAN : /agristack/farmer-loan'
      tags:
        - Agri Stack APIs
      description: Sync API to post Farmer Loan details to the state.
      operationId: post_agristack_farmer_loan
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                 - header
                 - farmer_id
              properties:
                  header:
                    type: object
                    required:
                        - sender_id
                        - receiver_id
                    properties:
                      version:
                          description: 'Messaging protocol specification version being used'
                          type: string
                          example: 0.1.0
                      sender_id:
                        description: 'Sender id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
                        type: string
                        example: '9d10494b-a217-4c7a-89e8-410d6f135gt6'
                      receiver_id:
                          description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
                          type: string
                          example: '9d10494b-a217-4c7a-89e8-410d6f135uy6'
                  bank_code:
                    type: string
                    description: 'Jan Samarth based bank IDs from Master'
                    example: '3'
                  branch_code:
                    type: string
                    description: 'Jan Samarth based branch IDs from Master'
                    example: '1635'
                  farmer_id:
                    description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
                    type: string
                    example: '12341234123'  
                  mobile_number:
                    type: string
                    example: '9876543210'
                    description: 'Mobile Number of the farmer'
                  transaction_type_id:
                    type: string
                    default: 'W'
                    description: 'Hardcoded at Jan Samarth.'
                  loan_type_id:
                    type: string
                    default: '1'
                    description: 'Hardcoded at Jan Samarth.'
                  amount:
                    type: string
                    example: '2009763.87'
                    description: 'Amount of loan taken by the farmer'
                  bank_reference_no:
                    type: string
                    example: '99888768'
                    description: 'Application ID generated by Jan Samarth'
                  data_source:
                    type: string
                    default: 'W'
                    description: 'Hardcoded at Jan Samarth.'
                  crop_code:
                    type: string
                    example: '1098567'
                    description: 'Crop Code as per central crop registry.'
                  year:
                    type: string
                    example: '2023-2024'
                    description: 'season year of the crop survey.'
                  season_name:
                    type: string
                    enum:
                      - Rabi
                      - Kharif
                      - Zaid
                    description: 'Season of the crop survey.'
                  renewal_date:
                    type: string
                    example: '12/12/25'
                    description: 'Loan renewal date, after 12 months of disbursement/ Account opening'
                  esigned_document:
                    type: string
                    example: 'byteArray'
                    description: 'Byte array of the document provided by farmer to take loan.'
                  farmer_land:
                    type: array
                    items:
                      properties:
                        unique_land_identifier:
                           type: string
                           description: 'Unique land code being maintained by states if no survey numbers are available'
                           example: '109764689327'
                        survey_number:
                           type: string
                           example: '67'
                           description: 'Survey Number of a plot'
                        farm_id:
                          type: string
                          example: 'KA98765412'
                          description: 'Unique Farm ID of the land within the state'
                        village_lgd_code:
                           type: string
                           description: 'unique LGD code assigned to a village available under a State/UT.'
                           example: '625373'
                        owner_name:
                           type: string
                           example: 'Ram Singh'
                           description: 'Full Name of the land owner'
                        owner_number:
                           type: string
                           example: '1'
                           description: |
                              Unique identifier assigned to individuals or entities who hold ownership rights to a particular parcel of land. It is a numerical designation used to distinguish one owner from another in the land records database. States are requested to maintain unique owner numbers for all owners against a land parcel.
                        main_owner_number:
                            type: string
                            example: '1'
                            description: |
                                  In situations where there are multiple owners associated with a particular parcel of land for whom no extent has been defined, designating a main owner helps establish a primary point of reference for administrative or legal purposes. States are requested to maintain a main owner number for all owners against a land parcel. The main owner number will be identified as following:

                                  | Ownership Type |  Owner Number  | Main Owner Number|
                                  |----------------|----------------|------------------|
                                  |  Single        |  1  | 1   |
                                  | Joint    | 1, 2, 3,..so on. | Lowest owner number. For the given example, it will be "1".|
                                  | Multiple  | 1,2,3,..so on.  |  Same as owner number |
                                  | Some Joint and Some Multiple  | For all owners whom extent is not defined, their  main owner number will be the lowest owner number among them. For all owners whom extent is defined, owner number and main owner number will be same. |
                        loan_area:
                           type: string
                           description: 'Integer part of the area of the mortgaged land'
                           example: '2'
                        loan_area_decimal:
                           type: string
                           description: 'Integer part of the area of the mortgaged land'
                           example: '2'
                        loan_area_unit:
                            type: string
                            example: 'Hectare'
                            enum:
                              - Hectare
                              - Acre
                            description: 'Area measurement unit as Hectare or Acre.'
                        identifier_type:
                            type: string
                            example: 'C/O'
                            description: 'Type of the identifier as, C/O, F/O, D/O, W/O.'
                        identifier_name:
                            type: string
                            example: 'लक्ष्मीप्रसाद'
                            description: 'Name of the identifier of the owner. It is the person with whom the farmer is getting identified.'
      responses:
        default:
           description: 'search response'
           content:
            application/json:
              schema:
                type: object
                required: 
                   - reference_number
                   - status_code
                properties:
                  reference_number:
                      type: string
                      example: '99888768'
                      description: 'Unique reference number for each request submitted.'
                  status_text:
                      type: string
                      example: 'Success'
                      description: 'Description of the status code'
                  status_code: 
                      type: integer
                      example: 200
                      description: 'Integer code of the status.'

        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
      security:
        - authorization: []
      deprecated: false    
  /agristack/crop-survey-data:
    $ref: paths/cropSurveyUnified.yaml
  /agristack/geo-referenced-maps:
    post:
      summary: 'AGRISTACK-GEO-REFERENCED-MAPS : /agristack/geo-referenced-maps'
      tags:
        - Agri Stack APIs
      description: Sync API to get geo referenced plot maps from states.
      operationId: post_agristack_geo_referenced_maps
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - village_lgd_code
                  - land_identifier
              properties:
                  village_lgd_code:
                    type: string
                    example: '66310'
                    description: 'LGD code assigned to a village'
                  land_identifier:
                      $ref: '#/components/schemas/land_identifier'
      responses:
        default:
           description: 'search response'
           content:
            application/json:
              schema:
                type: object
                properties:
                  village_lgd_code:
                      type: string
                      example: '613080'
                      description: 'LGD code of the village in which respective plot is available.'
                  survey_number:
                      type: string
                      example: '67A'
                      description: |
                        This is the Complete Survey Number/Sub Survey Number with the character portion (if available) along with
                        delimeter as the case may be, applicable to the state. For some states, it can be Khasra Number, Dak
                        Number, Khatian Number etc. a Few Examples of the Survey Number or Sub Survey Number are as following:
                              
                                State Name | Sub/Survey Number Sample
                                -----------|--------------------- 
                                Assam      |  125
                                Bihar      |   25
                                Odisha     |   16/371
                                Andhra Pradesh|123/A/456
                                Gujarat     |   697
                  unique_land_code:
                      type: string
                      example: '2129360053000062'
                      description: |
                        This is the unique state specific land code assigned to the resepective plot. It may be available in few states. If both are available then please provide either Survey Number of unique land code.
                  farm_id:
                      type: string
                      description: 'Unique Farm identifier assigned to a piece of land by its respective state.'
                      example: 'KA9876543678'
                  geometry_type:
                      type: string
                      enum:
                        - WKT
                        - Geo JSON
                      description: 'Type of plot geometry.'
                  projection_code:
                      type: string
                      example: '4326'
                      description: 'Projection code of the geometry'
                  plot_geometry:
                      type: object
                      description: |
                          The plot geometry can be provided in either WKT (POLYGON((77.90486488960615 23.011333990950444,77.90535841606489 23.011610493921005) or MULTIPOLYGON ([
                            [
                              [
                                [
                                  79.379994097,
                                  26.760159668
                                ],
                                [
                                  79.380164617,
                                  26.760342517
                                ],
                                [
                                  79.380316241,
                                  26.760620726
                                ],
                                [
                                  79.380397225,
                                  26.760651278
                                ],
                                [
                                  79.380430441,
                                  26.760662651
                                ]
                              ]
                            ]
                          ]
                      properties:
                        MULTIPOLYGON:
                              type: array
                              items:
                                  type: array
                                  items:
                                      type: array
                                      items:
                                        type: number
                                        description: 'Coordinate values of the plot geometry.'                        
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
      security:
        - basic_auth: []
      deprecated: false  
  /agristack/txn/status:
    post:
      summary: 'AGRISTACK-TXN-STATUS :/agristack/txn/status'
      description: 'Perform async status check of previous Agri Stack transanctions using transaction_id and/or reference_id(s)'
      operationId: post_reg_txnstatus
      tags:
        - Agri Stack APIs
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/msg_signature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/msg_header'
                    - properties:
                        action:
                          enum:
                            - txn-status
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/txnstatus_request'
              required:
                - header
                - message
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - authorization: []
      deprecated: false
  /agristack/txn/on-status:
    post:
      summary: 'AGRISTACK-TXN-ON-STATUS :/agristack/txn/on-status'
      description: 'Response to async status check of previous civil registrt transanctions using callback'
      operationId: post_reg_on-txnstatus
      tags:
        - Agri Stack APIs
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signature:
                  $ref: '#/components/schemas/msg_signature'
                header:
                  allOf:
                    - $ref: '#/components/schemas/msg_callback_header'
                    - properties:
                        action:
                          enum:
                            - txn-on-status
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/txnstatus_response'
              required:
                - header
      responses:
        '401':
          $ref: '#/components/responses/HttpErrorResponse'
        '403':
          $ref: '#/components/responses/HttpErrorResponse'
        '500':
          $ref: '#/components/responses/HttpErrorResponse'
        default:
          $ref: '#/components/responses/Response'
      security:
        - authorization: []
      deprecated: false  
  /villageWiseRorData:
    $ref: paths/rorData.yaml
  /nm/serviceInfo:
    $ref: acm/paths/nm_serviceInfo.yaml
  /nm/getEntities:
    $ref: acm/paths/nm_getEntities.yaml
  /token:
    $ref: acm/paths/nm_getToken.yaml
  /nm/verifyToken:
    $ref: acm/paths/nm_verifyToken.yaml
  /cm/consentRequests:
    $ref: acm/paths/cm_consentRequests.yaml
  /cm/consentArtifacts/{artifactId}:
    $ref: acm/paths/cm_consentArtifacts_{artifactId}.yaml
  /aiu/consentStatus/{artifactId}:
    $ref: acm/paths/aiu_consentStatus_{artifactId}.yaml
      # /aip/consentNotifications/{artifactId}:
      # $ref: paths/aip_consentNotifications_{artifactId}.yaml
  /aip/dataRequests:
    $ref: acm/paths/aip_dataRequests.yaml
  /aip/data/{transactionId}:
    $ref: acm/paths/aip_data_{transactionId}.yaml
components:
  schemas:
    agristack_get_consent_request_v0:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Consent Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_get_consent_request_v0'
          mapper_id:
            type: string
            example: 'i8:o10'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_consent_request_v0'
    agristack_consent_request_v0:
      type: object
      description: 'Unique consent request with schema ID i8'
      required:
        - meta
        - main
      properties:
        meta:
          description: Meta attributes of the API request
          type: object
          required:
            - requestId
            - timestamp
            - callbackUrl
            - timeout
          properties:
            requestId:
              description: 'Unique identifier of the API request, set by the API client'
              type: string
              example: 'req-8323294'
              maxLength: 99
            timestamp:
              description: 'Request timestamp, in ISO 8601 format'
              type: string
              format: date-time
              example: '2023-10-01T23:59:59Z'
            callbackUrl:
              description: Client's callback URL to be used by the server
              type: string
              format: uri
              example: 'http://aiu1-callback.com'
            timeout: 
              description: An upper bound on the time instant at which the request expires. (The request may expire earlier
                than this time if it is served fully by the server earlier. It will be deemed to expire at this time if it 
                has not been fully served earlier.)
              type: string
              format: date-time
              example: '2023-10-02T23:59:59Z'
        main:
          description: Main attributes of the API request
          type: object
          required:
            - targetUsers
            - aipId
            - aiuId
            - purposeCode
            - consentUntil
            - attributes_sought
          properties:
            targetUsers:
              description: 'Object defining the set of users whose data is being sought'
              oneOf:
                    - $ref: '#/components/schemas/farmerIdSet'
                    - $ref: '#/components/schemas/farmerSearchCriteria'
            aipId:
              description: 'UUID Identifier of the agricultural information provider (AIP) maintaining the data being sought as registered on central Network Manager'
              type: string
              example: 'fae0c968-050d-4033-9b14-bedb26354392'
            aiuId:
              description: 'Identifier of the agricultural information user (AIU) seeking data as registered on central Network Manager'
              type: string
              example: '35cf23fc-82c3-4870-b225-1782778ecf42'
            purposeCode:
              description: 'Purpose code indicating the intended use of the sought data'
              type: string
              example: 'Loan'
            consentUntil:
              description: 'Date until which permission to fetch data is being sought'
              type: string
              format: date
              example: '2024-03-31'
            attributes_sought:
              description: 'Set of attributes being sought. This section will be dynamic and parameters will change as per the use case. The given parameters are for sample purpose only.'
              type: object
              properties:
                 farmer_name: 
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Farmer Name'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 state_lgd_code: 
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'State LGD Code'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 dob:
                  type: object
                  properties:
                      display_name:
                        type: string
                        default: 'Date of Birth'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 gender:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Gender'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 mobile_number:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Mobile Number'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 residence_address:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Residence Address'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 village_name:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Village Name'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 farmer_category:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Farmer Category'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 identifier_name:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Identifier Name'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 identifier_type:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Identifier Type'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
                 caste_category:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Caste Category'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'OPTIONAL'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional.' 
            asset_data_details:
                    type: object
                    properties:
                      display_name:
                        type: string
                        default: 'Asset Data'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'REQUIRED'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                          - NOT-REQUIRED
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional or not-required.' 
            asset_data:
              type: object
              properties:
                land_asset_data:
                  type: object
                  properties:
                      display_name:
                        type: string
                        default: 'Land Asset Data'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'REQUIRED'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                          - NOT-REQUIRED
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional or not-required.'
                crop_asset_data:
                  type: object
                  properties:
                      display_name:
                        type: string
                        default: 'Crop Asset Data'
                        description: 'This field provides the label to be displayed on the interface of consent manager, where farmer will be able to reject or approve the consent for the respective field.'
                      display:
                        type: boolean
                        enum:
                          - true
                          - false
                        description: 'This field will be used to notify the consent manager by AIU, whether this field to be displayed on the screen of consent manager or not.'
                      required:
                        type: string
                        example: 'REQUIRED'
                        enum:
                          - REQUIRED
                          - OPTIONAL
                          - NOT-REQUIRED
                        description: 'This field will be used to notify the AIP whether the respective parameter is required or optional or not-required.'
                      survey_season:
                        type: array
                        items:
                          properties:
                            year:
                              type: string
                              example: '2023-2024'
                              description: 'season year of the crop survey.'
                            season:
                              type: string
                              enum:
                                - Rabi
                                - Kharif
                                - Zaid
                              description: 'Season of the crop survey.'
    agristack_consent_artifact_v0:
      description: 'This is unique response against consent request with schema ID o10.'
      type: object
      required:
        - meta
        - main
        - cmSignature
      properties:
        meta:
          type: object
          description: 'This will contain the metadata of consent artifact like, status and timestamp.'
          properties:
            status:
              type: string
              example: 'ACTIVE'
              description: 'This parameter will provide the status of the artifact in the form of ACTIVE or INACTIVE'
              enum:
                - ACTIVE
                - INACTIVE
            timestamp:
               description: Timestamp placed by the issuing consent manager, in ISO 8601 format 
               type: string
               format: date-time
               example: '2023-10-01T23:59:59Z'
        main:
          type: object
          description: 'This will contain reason of data requirement along with Data Seeker and Data Provider details.'
          properties:
            farmerId:
              type: string
              example: '12341234123'
              description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
            aipId:
              type: string
              example: 'KARNATAKA'
              description: 'ID of Agriculture Information Provider.'
            aiuId:
              type: string
              example: 'JAN SAMARTH'
              description: 'ID of Agriculture Information User.'
            purposeCode:
              type: string
              example: 'Loan'
              description: 'Purpose code for using the data.'
            validUntil:
              type: string
              example: '2024-03-31'
              description: 'Date until which the consent artifact is valid.'
            attributes:
              type: object
              description: 'This object will contain all the attributes for which AIU has asked for the consent.'
              properties:
                farmer_name:
                  type: string
                  example: 'GRANTED'
                  enum:
                    - GRANTED
                    - DENIED
                state_lgd_code:
                  type: string
                  example: 'GRANTED'
                  enum:
                    - GRANTED
                    - DENIED
                dob:
                  type: string
                  example: 'GRANTED'
                  enum:
                    - GRANTED
                    - DENIED
                gender:
                  type: string
                  example: 'GRANTED'
                  enum:
                    - GRANTED
                    - DENIED
                asset_artifact:
                  type: string
                  example: 'Encrypted String'
                  description: 'Encrypted consent data using AIP private key.'
        cmSignature:
           type: string
           example: 'kjfd34mdf=KedfnfEpd2dmd+kDf..kfdl89rpK2Bsaf4ypS+ruE1o'
           description: 'Digital signature created by the farmer. The signature is created on the hash of the concatenation of the meta and main attributes of the consent artifact'
            # type: object
            # description: "Digital signature created by the CM on the meta and main attributes of the artifact"
            # required:
            #       - cm_id
            #       - signature
            # properties:
            #   cmId:
            #       type: string
            #       example: 'CM-45209311'
            #       description: 'Unique ID of consent manager'
            #   signature:
            #       type: string
            #       example: 'kjfd34mdf=KedfnfEpd2dmd+kDf..kfdl89rpK2Bsaf4ypS+ruE1o'
            #       description: 'Digital Signature string of the farmer'
        userSignature:
           type: string
           example: 'kjfd34mdf=KedfnfEpd2dmd+kDf..kfdl89rpK2Bsaf4ypS+ruE1o'
           description: 'Digital signature created by the CM on the meta and main attributes of the artifact'
            # type: object
            # description: Digital signature created by an E-Sign Service Provider (ESP) on behalf of the user.
            # required:
            #     - signature
            # properties:
            #   espInfo:
            #           description: Details of the ESP that creates the digital signature.
            #           type: object
            #           required:
            #             - esp_name
            #           properties:
            #             espName:
            #               description: Name of the ESP.
            #               type: string
            #               example: ESP1
            #             espUrl:
            #               description: URL of the ESP.
            #               type: string
            #               example: https://esp1.com/
            #   certificate:
            #           description: Base64-encoded digital certificate of the user on whose behalf the signature is generated.
            #           type: string
            #           example: "jRjf93mfDfjoe894kff+4PJi00kjfddf9Riamdf=Kedf..nfEpd2dmd+kDf..dl8df4M39rpKdweijr2Bsaf4ypS+r++re84"
            #   signature:
            #           description: Base64-encoded signature.
            #           type: string
            #           example: "kjfd34mdf=KedfnfEpd2dmd+kDf..kfdl89rpK2Bsaf4ypS+ruE1o"
    registry_record_type:
      type: string
      description: 'Name of the Response Schema as per the Agri Stack Documentation and Mapper ID. If the registry_record_type and mapper ID mismatch then error will be generated.'
      enum:
        - agristack_credit_v0_farmer_data
        - agristack_credit_v0_cropsown_data
        - agristack_v0_crops_by_village_data
        - agristack_farmer_ids_v0_data
        - agristack_croparea_v0_data
        - agristack_croparea_v1_data
        - agristack_minimum_support_price_v0_data
        - agristack_cropsown_v0_get_cropsown_by_farmer_data
        - agristack_eprocurement_v0_data
        - agristack_consent_artifact_v0
        - agristack_price_support_scheme_v0_data
        - agristack_farmer_id_v0_data
        - agristack_soil_health_v0_data
        - agristack_farmer_details_v0_data
        - agristack_land_data_v0_data
        - agristack_loan_v0_data
        - agristack_v0_farmer_data
        - agristack_crop_v0_data
    crop_survey_info:
      type: object
      description: 'Plot wise info of crop surveyed data.'
      properties:
        village_lgd_code:
           type: integer
           description: 'LGD code of the village'
        village_plot_ref:
           type: string
           description: 'Plot reference number'
        farmland_plot_id: 
           type: string
           description: 'Farm ID of the plot generated by state'
        survey_number:
           type: string
           description: 'Survey number of the plot'
        total_area:
           type: string
           description: 'Total area of the plot'
        area_unit:
           type: string
           example: 'HECTARE'
           enum:
             - HECTARE
             - ACRE
           description: 'Area measurement unit as HECTARE or ACRE.'
        owner:
           type: array
           description: 'Details of plot owners.'
           items:
              $ref: '#/components/schemas/farmer'
        na_area:
           type: string
           description: 'Area of Non agriculture land in the plot'
        fallow_area:
           type: string
           description: 'Area of fallow land in the plot'
        harvested_area:
           type: string
           description: 'Area of harvested land in the plot'
        crop:
           type: array
           description: 'Details of crop sown in the plot'
           items:
              $ref: '#/components/schemas/crop'
    farmer:       
      type: object
      description: 'Owner details of a plot'
      properties:
         owner_number:
            type: string
            description: 'Number of the owner for the respective plot'
         owner_name: 
            type: string
            description: 'Name of owner of the plot'
         identifier_name:
            type: string
            description: 'Name of the identifier'
         identifier_type:
            type: string
            description: 'Type of the identifier as C/O, S/O, D/O etc.'
         owner_farmer_id:
            type: string
            description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
         inputed_full_equal_declared_ror:
            type: string
            description: ''
         farmer_extent_per_ror:
            type: string
            description: 'Extent of the plot assigned to the respective farmer'
         farmer_imputed_extent:
            type: string
            description: ''
    crop:
      type: object
      description: 'Crop details sown on the field'
      properties:
        crop_number:
           type: string
           description: 'Number of the crop in the list'
        crop_code:
           type: string
           description: '7-Digit crop ID like 0701400'
        crop_class:
           type: string
           description: 'Class under which respective crop falls'
        crop_name:
           type: string
           description: 'Name of the crop'
        crop_area:
           type: string
           description: 'Area of the sowing crop'
        area_unit:
           type: string
           example: 'HECTARE'
           enum:
             - HECTARE
             - ACRE
           description: 'Area measurement unit as HECTARE or ACRE.'
        crop_variety:
           type: string
           description: 'Variety of the crop'
        crop_type:
           type: string
           description: 'Type of the crop'
        sowing_date:
           type: string
           description: 'Date on which respective crop was sown on the field'
        stage:
           type: string
           description: ''
        irrigation_type:
           type: string
           description: 'Type of irrigation'
        irrigation_source:
           type: string
           description: 'Source of irrigation'
    msg_header:
      type: object
      description: Message header
      properties:
        version:
          description: 'Messaging protocol specification version being used'
          type: string
          example: 0.1.0
        message_id:
          description: 'Unique message id (uuid) to communicate between sender and receiver systems to reliably deliver the message over any transport layer i.e. https, pub/sub, sftp etc.'
          type: string
          example: '9d10494b-a217-4c7a-89e8-410d6f135fc9'
        message_ts:
          description: 'Time of message generation in RFC3339 format'
          type: string
          format: date-time
          example: '2022-12-04T18:01:07+00:00'
        sender_id:
          description: 'UUID - Participant ID of the consumer of this API as received from Agri Stack Network Manager. Used for authorization.'
          type: string
          example: '9d10494b-a217-4c7a-89e8-410d6f135gt6'
        sender_uri:
          description: 'sender url to accept callbacks'
          type: string
          format: uri
          example: 'https://sender.org/on-seek'
        receiver_id:
          description: 'UUID - Participant ID of the publisher of this API as received from Agri Stack Network Manager.'
          type: string
          example: '9d10494b-a217-4c7a-89e8-410d6f135uy6'
        total_count:
          description: 'Total number of requests present in the message request'
          type: integer
          example: 1
        is_msg_encrypted:
          description: Is message encrypted?
          type: boolean
          default: false
      required:
           - message_id
           - message_ts
           - action
           - total_count
           - sender_id
    msg_signature:
      type: string
      description: |
          1. The signature will be a secure hash having request and header parameters concatenated and signed by sender's private key using HMAC (Hash-based Message Authentication Code) mechanism.
          2. The receiver needs to verify the signature using the public key of the sender as provided corresponding to the private key used for signing.
      example: 'signature string'
    pagination:
      description: 'Pagination definition, count starts with 1'
      type: object
      properties:
        page_size:
          type: number
          format: int32
          example: 2000
          description: 'Maximum number of records that can be sent in a single on-seek request.'
        page_number:
          type: number
          format: int32
          example: 5
          description: 'Data provider will send the number of page as given in the seek request.'
        total_count:
          type: number
          format: int32
          example: 24250
          description: 'Data provider will send the total number of records available for the specified request, using which Data Seeker will identify whether to call the seek API again to get another set of data or not.'
      required:
        - page_size
        - page_number
        - total_count
    pagination_request:
      description: 'Pagination definition, count starts with 1'
      type: object
      properties:
        page_size:
          type: number
          format: int32
          example: 2000
        page_number:
          type: number
          format: int32
          default: 1
          example: 1
      required:
        - page_size
    transaction_id:
      description: 'Unique transaction_id (uuid)set by txn initiating system (i.e sender) to co-relate requests across processing systems/service end points'
      type: string
      maxLength: 99
      example: '9d10494b-a217-4c7a-89e8-410d6f135bv7'
    msg_callback_header:
      type: object
      description: Message header
      properties:
        version:
          description: Messaing protocol specification version being used
          type: string
          default: 1.0.0
        message_id:
          description: |
            1. Unique message id (uuid) to communicate between sender and receiver systems to realiable deliver the message over any transport layer i.e https, pub/sub, sftp etc.,
            2. The scope of message_id end with successful ack of the message by the receiver.
            3. To realy the message between hops, underlying relying parties may consider to store and forward the message with integirty, ie Signature intact.
          type: string
          example: '9d10494b-a217-4c7a-89e8-410d6f135df5'
        message_ts:
          description: 'Time of message generation in RFC3339 format'
          type: string
          format: date-time
          example: '2022-12-04T18:02:35+00:00'
        action:
          description: Agri Stack specific action. Usually verb from the URI should go here to help store and fwd kind of processing requirements.
          type: string
          example: 'on-seek'
        status:
          $ref: '#/components/schemas/request_status'
        status_reason_code:
          $ref: '#/components/schemas/msg_header_status_reason_code'
        status_reason_message:
          description: 'Status reascon code message, if any, Helps actionanble messaging for system/end users'
          type: string
          maxLength: 999
        total_count:
          description: Total no of requests present in the message request
          type: integer
          example: 1
        completed_count:
          description: No of requests in complteed state. Complete includes success and error requests due to funcational errors
          type: integer
          example: 1
        sender_id:
          description: 'UUID - Participant ID of the consumer of this API as received from Agri Stack Network Manager'
          type: string
          example: '9d10494b-a217-4c7a-89e8-410d6f135gt6'
        receiver_id:
          description: 'UUID - Participant ID of the publisher of this API as received from Agri Stack Network Manager'
          type: string
          example: '9d10494b-a217-4c7a-89e8-410d6f135uy6'
        is_msg_encrypted:
          description: Is message encrypted?
          type: boolean
          default: false
      required:
        - message_id
        - message_ts
        - action
        - status
    search_response:
      type: object
      description: Response to search request. Multiple responses for each page can be pushed to the caller as an implementation!
      properties:
        transaction_id:
          $ref: '#/components/schemas/transaction_id'
        correlation_id:
          type: string
          description: >
            1. correlation_id (uuid) acknowledged by end txn processing system (i.e
            receiver) to co-relate all related requests in the context of a
            business transaction.
            2. correlation_id uniqueness is ensured by txn processing system
            (i.e receiver)
          maxLength: 99
          example: '9d10494b-a217-4c7a-89e8-410d6f135j59'
        search_response:
          type: array
          items:
            type: object
            properties:
               reference_id:
                  $ref: '#/components/schemas/reference_id'
               data:
                type: object
                description: |
                  Search result record as an outcome of search/subscribe action
                properties:
                  reg_record_type:
                    $ref: '#/components/schemas/registry_record_type'
                  reg_records:
                    oneOf:
                      - $ref: '#/components/schemas/agristack_credit_v0_cropsown_data'
                      - $ref: '#/components/schemas/agristack_credit_v0_farmer_data'
                      - $ref: '#/components/schemas/agristack_croparea_v0_data'
                      - $ref: '#/components/schemas/agristack_farmer_ids_v0_data'
                      - $ref: '#/components/schemas/agristack_cropsown_v0_get_cropsown_by_farmer_data'
                      - $ref: '#/components/schemas/agristack_minimum_support_price_v0_data'
                      - $ref: '#/components/schemas/agristack_v0_crops_by_village_data'
                      - $ref: '#/components/schemas/agristack_eprocurement_v0_data'
                      - $ref: '#/components/schemas/agristack_price_support_scheme_v0_data'
                      - $ref: '#/components/schemas/agristack_farmer_id_v0_data'
                      - $ref: '#/components/schemas/agristack_soil_health_v0_data'
                      - $ref: '#/components/schemas/agristack_farmer_details_v0_data'
                      - $ref: '#/components/schemas/agristack_land_data_v0_data'
                      - $ref: '#/components/schemas/agristack_loan_v0_data'
                      - $ref:  paths/requestResponseSchemas.yaml#/components/schemas/agristack_v0_farmer_data
                      - $ref:  paths/requestResponseSchemas.yaml#/components/schemas/agristack_crop_v0_data
                      - $ref:  paths/requestResponseSchemas.yaml#/components/schemas/agristack_croparea_v1_data
                required:
                  - reg_record_type
                  - reg_records
        pagination:
          $ref: '#/components/schemas/pagination'
        locale:
          $ref: '#/components/schemas/language_code'
      required:
        - reference_id
        - timestamp
        - status
    msg_header_status_reason_code:
      type: string
      description: Message header related common status reason codes
      enum:
        - NA
        - rjct.version.invalid
        - rjct.message_id.duplicate
        - rjct.message_ts.invalid
        - rjct.action.invalid
        - rjct.action.not_supported
        - rjct.total_count.invalid
        - rjct.total_count.limit_exceeded
        - rjct.errors.too_many
    request_status:
      type: string
      description: 'Request (e.g disburse, link, unlink, resolve, issue, search, verify, etc.,) status: <br> 1. rcvd: Received; Request received <br> 2. pdng: Pending; Request initiated <br> 3. succ: Success; Request successful <br> 4. rjct: Rejected; Request rejected'
      enum:
        - rcvd
        - pdng
        - succ
        - rjct
    timestamp:
      type: string
      description: 'datetime in RFC3339 format'
      format: date-time
      example: '2022-12-04T17:20:07-04:00'
    search_sort_list:
      items:
        $ref: '#/components/schemas/search_sort'
    search_sort:
      description: 'Sorting definition'
      type: object
      properties:
        attribute_name:
          type: string
          description: 'attribute name'
        sort_order:
          type: string
          enum:
            - asc
            - desc
    search_request:
      type: object
      description: |
        1. Functional registry specific extension to search.
      properties:
        transaction_id:
          $ref: '#/components/schemas/transaction_id'
        search_request:
          type: array
          description:
            1. Batch requests enabel multiple individual requests with respective consent/authorize codes
          items:
            type: object
            properties:
              reference_id:
                   $ref: '#/components/schemas/reference_id'
              timestamp:
                   $ref: '#/components/schemas/timestamp'
              search_criteria:
                type: object
                properties:
                  query_type:
                    $ref: '#/components/schemas/query_type'
                  reg_type:
                    type: string
                    description: |
                       Agri Stack specific registry name. Farmer registry will be used to get farmer's demographic and crop details and ror will be used to get the land data.'
                    enum:
                      - agristack_farmer
                      - agristack_ror
                  query:
                    $ref: '#/components/schemas/registry_queries'
                  sort:
                    $ref: '#/components/schemas/search_sort_list'
                  pagination:
                    $ref: '#/components/schemas/pagination_request'
                  consent:
                    description: 'This object will be blank in case of query is consent request.'
                    type: object
                    properties:
                      consent_required:
                          example: TRUE
                          enum:
                            - TRUE
                            - FALSE
                      consent_artifact:
                           type: object
                           description: 'AIU needs to pass the complete consent artifact as received in the response of “Get Consent Artifact” API. As due to any change the artifact will get tempered and AIP will not be able to validate the same at its end.'
                required:
                  - query_type
                  - query
                  - result_record_type
              locale:
                $ref: '#/components/schemas/language_code'
            required:
              - reference_id
              - timestamp
              - search_criteria
      required:
        - transaction_id
        - search_request
    registry_queries:
      description: 'Agri Stack specific request schema details.'
      oneOf:
        - $ref: '#/components/schemas/agristack_credit_v0_get_cropsown_data'
        - $ref: '#/components/schemas/agristack_croparea_v0_get_data'
        - $ref: '#/components/schemas/agristack_croparea_v1_get_data'
        - $ref: '#/components/schemas/agristack_farmer_id_v0_get_data'
        - $ref: '#/components/schemas/agristack_minimum_support_price_v0_get_data'
        - $ref: '#/components/schemas/agristack_v0_get_crops_by_village'
        - $ref: '#/components/schemas/agristack_eprocurement_v0_get_data'
        - $ref: '#/components/schemas/agristack_get_consent_request_v0'
        - $ref: '#/components/schemas/agristack_price_support_scheme_v0_get_data'
        - $ref: '#/components/schemas/agristack_soil_health_v0_get_data'
        - $ref: '#/components/schemas/agristack_land_data_v0_get_data'
        - $ref: '#/components/schemas/agristack_loan_v0_get_data'
        - $ref: '#/components/schemas/agristack_v0_get_farmer_data'
        - $ref: '#/components/schemas/agristack_crop_v0_get_data'
    Expression:
      description: Expression
      properties:
        attribute_name:
          type: string
          description: attribute name
          example: 'crop_area'
        operator:
          $ref: '#/components/schemas/ExpOperator'
        attribute_value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
          example: "200.12"
      required:
        - seq_num
        - attribute_name
        - operator
        - attribute_value
    ExpCondition:
      description: Condition in an expression
      type: string
      enum:
        - and
        - or
        - not
      example: and
    ExpOperator:
      description: Operator in an expression
      type: string
      enum:
        - gt
        - lt
        - eq
        - ge
        - le
      example: lt
    query_type:
      type: string
      description: |
        1.namedQuery to be used for query_name, mapper_id and query_params structure.
        2.predicateQuery to be used for criteria based queries.
      enum:
        - namedQuery
        - predicateQuery
    language_code:
      description: 'Indicates language code. Agri Stack supports country codes as per ISO 639.3 standard'
      type: string
      pattern: '^[a-z]{3,3}$'
      example: en
    search_status_reason_code:
      type: string
      description: Identity verification request status reason codes
      enum:
        - NA
        - rjct.reference_id.invalid
        - rjct.reference_id.duplicate
        - rjct.timestamp.invalid
        - rjct.search_criteria.invalid
        - rjct.record_type.invalid
        - rjct.sort.invalid
        - rjct.pagination.invalid
        - rjct.search.too_many_records_found
    reference_id:
      type: string
      description: 'Unique reference_id (uuid)set by txn initiating system for each request in a batch'
      example: '9d10494b-a217-4c7a-89e8-410d6f135yt9'
    error:
      description: |
        Describes an error object that is returned to standard post call request. <br>
        1. This object shall be sent when any request received by a participant is not parsable or message integrity check fails. <br>
        2. This object may be used across all transport protocols to acknowledge the receipt of a message i.e HTTPS, FTP, Messaging etc., <br>"
      type: object
      properties:
        code:
          type: string
          description: Standard error code
          enum:
            - NA
            - bad
            - request.unauthorized
            - request.forbidden
            - request.not_found
            - request.timeout
            - version.not_supported
            - too_many_requests
            - sender_id.invalid
            - sender_uri.invalid
            - receiver_id.invalid
            - signature.missing
            - signature.invalid
            - service.unavailable
        message:
          type: string
          description: Message to describe the above error code. For "bad" the message should be- Farmer ID does not exist for Given Aadhaar.
          maxLength: 999
    txnstatus_request:
      type: object
      description: Request to fetch txn status on various service requests
      properties:
        transaction_id:
          $ref: '#/components/schemas/transaction_id'
        txnstatus_request:
          type: object
          properties:
            reference_id:
              $ref: '#/components/schemas/reference_id'
            attribute_type:
              type: string
              enum:
                - transaction_id
                - reference_id_list
                - correlation_id
            attribute_value:
              oneOf:
                - $ref: '#/components/schemas/transaction_id'
                - $ref: '#/components/schemas/reference_id_list'
                - $ref: '#/components/schemas/search_response/properties/correlation_id'
            locale:
              $ref: '#/components/schemas/language_code'
          required:
            - reference_id
            - attribute_type
            - attribute_value
      required:
        - transaction_id
        - txnstatus_request
    txnstatus_response:
      type: object
      description: txn status info on various service requests
      properties:
        transaction_id:
          $ref: '#/components/schemas/transaction_id'
        correlation_id:
          $ref: '#/components/schemas/search_response/properties/correlation_id'
        txnstatus_response:
          type: object
          properties:
            txn_status:
              oneOf:
                - $ref: '#/components/schemas/search_response'
          example:
            type: object
            description: >-
              Response to search request. Multiple repsonses for each page can
              be pushed to the caller as an implementation!
            properties:
              transaction_id:
                $ref: '#/components/schemas/transaction_id'
              correlation_id:
                description: >
                  1. correlation_id (uuid) acknowledged by end txn processing system
                  (i.e receiver) to co-relate all related requests in the
                  context of a business transaction.
                  2. correlation_id uniqueness is ensured by txn processing
                  system (i.e receiver)
                type: string
                maxLength: 99
                example: '9d10494b-a217-4c7a-89e8-410d6f135re4'
              search_response:
                type: array
                items:
                  type: object
                  properties:
                    reference_id:
                      $ref: '#/components/schemas/reference_id'
                    timestamp:
                      $ref: '#/components/schemas/timestamp'
                    status:
                      $ref: '#/components/schemas/request_status'
                    status_reason_code:
                      $ref: '#/components/schemas/search_status_reason_code'
                    status_reason_message:
                      description: 'Status reason code message. Helps actionanble messaging for systems/end users'
                      type: string
                      maxLength: 999
                    data:
                      type: object
                      description: 'Search result record as an outcome of search/subscribe action'
                      properties:
                        version:
                          type: string
                          default: 1.0.0
                        reg_record_type:
                          allOf:
                            - description: 'Registry record type returned'
                            - $ref: '#/components/schemas/registry_record_type'
                        reg_records:
                          items:
                            $ref: '#/components/schemas/agristack_credit_v0_cropsown_data'
                      required:
                        - reg_record_type
                        - reg_records
                    pagination:
                      $ref: '#/components/schemas/pagination'
                    locale:
                      $ref: '#/components/schemas/language_code'
                  required:
                    - reference_id
                    - timestamp
                    - status
            required:
              - transaction_id
              - correlation_id
              - search_response
          required:
            - txn_type
            - txn_status
      required:
        - transaction_id
        - correlation_id
        - txnstatus_response
    reference_id_list:
      type: array
      items:
        $ref: '#/components/schemas/reference_id'
    FileInfoRequest:
      type: object
      description: File info. Used in file upload feature using HTTPS
      properties:
        file:
          oneOf: 
             - $ref: '#/components/schemas/agristack_v0_get_farmer_ids'
        file_format:
          description: 'File content format. e.g json, csv, etc.,'
          type: string
          default: csv
      required:
        - action
        - file
    agristack_v0_get_farmer_ids:
      type: string
      format: binary
      description: |
        Following column with values to be sent in the request file.
        |aadhaar_no|
        |----------|
        |    123459876545      |
        |    123459876578      |
    FileInfoResponse:
      type: object
      description: File info. Used in file upload feature using HTTPS
      properties:
        file:
          oneOf: 
             - $ref: '#/components/schemas/agristack_v0_farmer_ids_data'
        file_format:
          description: 'File content format. e.g json, csv, etc.,'
          type: string
          default: csv
      required:
        - action
        - file  
    agristack_v0_farmer_ids_data:
      type: string
      format: binary
      description: |
        Following columns with values to be sent in the response file. 
        |aadhaar_no|  farmer_id |
        |----------|------------|
        |   123459876545       |  11111111111          |
        |   123459876578       |  11111111112          |
    agristack_v0_crops_by_village_query:
       type: object
       description: 'Unique request schema with API Named Query as i3'
       properties:
          village_lgd_code:
            type: string
            description: 'unique LGD code assigned to a village available under a State/UT.'
            example: '625373'
          season:
            type: string
            description: 'Name of the agriculture season having a single value out of rabi, kharif, zaid.'
            example: 'Rabi'
            enum:
              - Rabi
              - Kharif
              - Zaid
          year:
            type: string
            example: '2022-2023'
            description: 'Range of the season in the form of year.'       
    agristack_v0_get_crops_by_village:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Crops by Village use case as defined in Agri Stack API Documentation.'
            example: 'agristack_v0_get_crops_by_village'
          mapper_id:
            type: string
            example: 'i3:o3'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_v0_crops_by_village_query'
    agristack_v0_crops_by_village_data:
      type: object
      description: 'Unique response schema with API Named Query as o3'
      properties:
        list_of_crops:
         type: array
         items:
           properties:
                crop_code:
                  type: string
                  example: '0760973'
                  description: '7-digit Unique code of each crop as per central core registry. '
                crop_name:
                  type: string
                  example: 'Bottle Gourd'
                  description: 'Name of the crop as per central registry.'
        village_lgd_code:
          type: string
          description: 'unique LGD code assigned to a village available   under a State/UT.'
          example: '625373'
        season:
          type: string
          description: 'Name of the agriculture season having a single value out of rabi, kharif, zaid.'
          example: 'Rabi'
          enum:
            - Rabi
            - Kharif
            - Zaid
        year:
          type: string
          example: '2022-2023'
          description: 'Range of the season in the form of year.' 
    agristack_v0_farmer_query:
       type: object
       description: 'Unique request schema with API Named Query as i1.'
       required:
           - farmer_aadhaar
           - farmer_aadhaar_name
           - farmer_aadhaar_father_husband_name
           - village_lgd_code
           - land_identifier
       properties:
         farmer_aadhaar:
           type: string
           example: 'dff7b2676e23e0ce14d9f27d07ad525bcc2c870146a79d22dd62c702678acfc9'
           description: |
             1. AIU needs to encrypt the Aadhaar using the Public Key of the state core (provided during the integration process with the encryption code) and share the encrypted aadhaar in the api request.
             2. State Core will decrypt the Encrypted Aadhaar using their private key corresponding to the Public Key and response back with the corresponding Farmer ID.
         farmer_aadhaar_name:
           type: string
           example: 'Saranga Yaad'
           description: 'Name of the farmer as per Aadhaar.'
         farmer_aadhaar_father_husband_name:
           type: string
           example: 'Bheega Babu'
           description: |
              Name of the father of the farmer as mentioned in farmer's Aadhaar.
         village_lgd_code:
            $ref: '#/components/schemas/village_lgd_code'
         land_identifier:
            $ref: '#/components/schemas/land_identifier'
         phone_number:
          type: string
          example: '9876543210'
          description: |
              An active mobile number of the farmer, on which they can be contacted.
    agristack_credit_v0_cropsown_query:
       type: object
       description: 'Unique request schema with API Named Query as i2'
       properties:
         farmer_id:
           type: string
           example: '98765423456'
           description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
         state_lgd_code:
           type: string
           example: '29'
           description: 'State LGD Code is the unique 2-Digit LGD code assigned to a State/UT.'  
         survey_season:
            type: array
            items:
              properties:
                season:
                  type: string
                  description: 'Season of the crop survey'
                  example: 'Rabi'
                  enum:
                  - Rabi
                  - Kharif
                  - Zaid
                year:
                  type: string
                  example: '2023-2024'
                  description: 'Season year of the crop survey.'
              required:
              - year
              - season
       required:
         - farmer_id
         - state_lgd_code
         - survey_season
    agristack_credit_v0_cropsown_data:
      type: object
      description: 'Unique response schema with API Named Query as o22.'
      properties:
        farmer_id:
           type: string
           example: '98765423456'
           description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
        state_lgd_code:
           type: string
           example: '29'
           description: 'LGD code of the state'        
        village_lgd_code:
           type: integer
           description: 'LGD code of the village'
        number_of_plots:
           type: integer
           description: 'Number of plots available in a village.'
        plot_level_info:
           type: array
           description: 'Array of crop survey details of each plot'
           items:
              $ref: '#/components/schemas/crop_survey_info'
    agristack_credit_v0_get_cropsown_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Cropsown Data Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_credit_v0_get_cropsown_data'
          mapper_id:
            type: string
            example: 'i2:o2'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_credit_v0_cropsown_query'
    agristack_v0_get_farmer_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Use Case Schema as defined in Agri Stack API Documentation.'
            example: 'agristack_v0_get_farmer_data'
          mapper_id:
            type: string
            example: 'i1:o1'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_v0_farmer_query'
    agristack_v0_farmer_data:
       type: object
       description: 'Unique response schema with API Named Query as o1.'
       required:
            - village_lgd_code
            - land_identiifiers
            - farmer_aadhaar
            - farmer_aadhaar_name
            - farmer_aadhaar_father_husband_name
            - total_plot_area
            - area_unit
            - owner_details
       properties:
        village_lgd_code:
            $ref: '#/components/schemas/village_lgd_code'
        land_identifiers:    
          type: object
          required: 
              - survey_number
          properties:
              survey_number:
                type: string
                example: '67A'
                description: |
                    This is the complete Survey Number/Sub Survey Number with the character portion (if available) along with delimeter ("/", ".", "-" etc.) as the case may be, applicable to the state. For some states, it can be Khasra Number, Dak Number, Khatian Number etc. 
              unique_land_code:
                type: string
                example: '2129360053000062'
                description: |
                  This is the unique state specific land code assigned to the resepective plot. It may be available in few states. If both are available then please provide either Survey Number of unique land code.
        farmer_aadhaar:
          type: string
          example: 'dff7b2676e23e0ce14d9f27d07ad525bcc2c870146a79d22dd62c702678acfc9'
          description: |
            1. AIU needs to encrypt the Aadhaar using the Public Key of the state core (provided during the integration process with the encryption code) and share the encrypted aadhaar in the api request.
            2. State Core will decrypt the Encrypted Aadhaar using their private key corresponding to the Public Key and response back with the corresponding Farmer ID.
        farmer_aadhaar_name:
          type: string
          example: 'Saranga Yaad'
          description: 'Name of the farmer as per Aadhaar.'
        farmer_aadhaar_father_husband_name:
          type: string
          example: 'Bheega Babu'
          description: |
            Name of the father of the farmer as mentioned in farmer's Aadhaar.
        phone_number:
          type: string
          example: '9876543210'
          description: |
              An active mobile number of the farmer, on which they can be contacted.
        total_plot_area:
          type: integer
          example: '3'
          description: 'Integer part of total area of the plot for the given sub/survey number or unique land code.'
        total_plot_area_decimal_part:
          type: 'string'
          example: '2030'
          description: 'This will contain the decimal part of the total area.'
        area_unit: 
          type: string
          enum:
            - HECTARE
            - ACRE
          description: 'Measuring unit of the total plot area.' 
        centroid_longitude:
          type: string
          description: |
            The centroid latitude and centroid longitude of a land refer to the geographical coordinates that represent the center or average position of all the points within the land's boundary. These coordinates are calculated based on the geometric center of the land's shape.
          example: '79.379994097'
        centroid_latitude:
          type: string
          description: |
            The centroid latitude and centroid longitude of a land refer to the geographical coordinates that represent the center or average position of all the points within the land's boundary. These coordinates are calculated based on the geometric center of the land's shape.
          example: '26.760159668'
        plot_geometry:
          type: object
          description: 'Either centroid points or Plot Geometry will be shared.'
          properties:
            type:
              type: string
              description: Type of geometry
              default: 'MultiPolygon'
            coordinates:
              type: array
              description: Coordinates of the geometry
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
        owner_details:
          type: array
          description: |
            This field will contain the owner details of the respective Survey/Sub-Survey/State Specific Land ID. Within the provided owner details, joint ownership can be determined by either having the same Khata Number for multiple landowners or by having same Main Owner Number against other joint owners of the same piece of land. Illustrative examples are provided in the table below:
            
            Owner Name     |   Khata Number     |   Ownership Type
            ---------------|--------------------|------------------
            A              |    1               | Joint Owner with B and C  
            B              |    1               | Joint Owner with A and C
            C              |    1               | Joint Owner with B and A
            D              |    2               | Single Owner

            Following table explains the joint ownership in case of Owner Number.
            
            Owner Name     |   Owner Number      |    Main Owner Number  |   Ownership Type
            ---------------|---------------------|-----------------------|---------------------
            A              |    1                |       1               |  Joint Owner with B and C
            B              |    2                |       1               |  Joint Owner with A and C
            C              |    3                |       1               |  Joint Owner with B and A
            D              |    4                |       4               |  Single Owner 
          items:
            required:
                - owner_number
                - main_owner_number
                - owner_name_ror
                - owner_father_husband_name_ror
                - name_match_score_aadhaar_ror
                - name_match_score_father_husband_name
                - claimed_in_agristack
            properties:
                khata_number:
                    type: string
                    example: '1'
                    description: 'Khata number of the farmer in this record. (if applicable).'
                farm_id:
                    type: string
                    example: 'KA8688768886'
                    description: 'Unique Farm identifier assigned to a piece of land by its respective state.'
                owner_number:
                  type: string
                  example: '1'
                  description: |
                    Unique identifier assigned to individuals or entities who hold ownership rights to a particular parcel of land. It is a numerical designation used to distinguish one owner from another in the land records database. States are requested to maintain unique owner numbers for all owners against a land parcel.
                main_owner_number:
                    type: string
                    example: '1'
                    description: |
                        In situations where there are multiple owners associated with a particular parcel of land for whom no extent has been defined, designating a main owner helps establish a primary point of reference for administrative or legal purposes. States are requested to maintain a main owner number for all owners against a land parcel. The main owner number will be identified as following:

                        | Ownership Type |  Owner Number  | Main Owner Number|
                        |----------------|----------------|------------------|
                        |  Single        |  1  | 1   |
                        | Joint    | 1, 2, 3,..so on. | Lowest owner number. For the given example, it will be "1".|
                        | Multiple  | 1,2,3,..so on.  |  Same as owner number |
                        | Some Joint and Some Multiple  | For all owners whom extent is not defined, their  main owner number will be the lowest owner number among them. For all owners whom extent is defined, owner number and main owner number will be same. |
                owner_name_ror: 
                    type: string
                    example: 'सन्तराम'
                    description: 'Name of the owner as per ROR records.'
                owner_name_english: 
                    type: string
                    example: 'Santram'
                    description: 'Name of the owner in English language.(Shall not be treated at par with RoR name.)'
                owner_extent:
                    type: integer
                    example: '3'
                    description: 'Integer part of total area of the plot owned by the owner. if Owner Extent is provided, then no need to provide owner_share.'
                owner_extent_decimal_part:
                    type: string
                    example: '0034'
                    description: 'This will contain the decimal part of the owner extent.'
                owner_share:
                    type: string
                    example: '20%'
                    description: 'Share of the owner from the total plot area. Some states maintain land share in percentage instead of actual area, hence if owner share is provided, then no need to provide owner extent.'
                land_usage_type:
                  type: string
                  example: 'A'
                  description: 'Type of use of land either as Agriculture (A) or Non Agricultural (NA).'
                  enum:
                    - A
                    - NA
                owner_category:
                  type: string
                  example: 'Private'
                  description: 'Type of ownership.'
                  enum:
                    - Private
                    - Government
                identifier_type:
                    type: string
                    example: 'C/O'
                    description: 'This field will notify the relationship of the identifier name with the farmer. Type of the identifier may be like, C/O, D/O, S/O, W/O. The enums of this fields will be updated once all possible options being captured by various states will be received.'
                    enum:
                      - C/O
                      - D/O 
                      - S/O
                      - W/O
                      - H/O
                      - F/O
                owner_father_husband_name_ror:
                  type: string
                  description: |
                      Name of the owner's father/husband as per ROR.
                  example: 'लक्ष्मीप्रसाद'
                owner_father_husband_name_english:
                  type: string
                  description: |
                      Name of the owner's father/husband as translated using DOLR API.
                  example: 'Laxmiprasad'
                government_liability:
                  type: string
                  description: 'For example, government liabilities are some conditions put on a piece of land, like a land cannot be sold for 15 years without the permission of the government. If those records are a part of ROR then they need to be passed against this field. If there are multiple liabilities, then they need to be passed as comma separated values.'
                private_liability:
                  type: string
                  description: 'For example, private liabilities are those where a farmer has taken a loan against a land or liabilities by banks or private agencies. If there are multiple liabilities, then they need to be passed as comma separated values.'
                name_match_score_aadhaar_ror:
                  type: string
                  example: '50'
                  description: |
                       Name match score of farmer's name between Aadhaar Name and ROR Name.
                name_match_score_father_husband_name:
                  type: string
                  example: '50'
                  description: |
                      Name match score of farmer's father/husband name between Aadhaar Name and ROR Name.
                claimed_in_agristack:
                   type: string
                   example: 'Y'
                   enum:
                     - Y
                     - N
                   description: 'Flag to indicate whether the respective land has been claimed by the respective farmer in Agri Stack.'
    agristack_farmer_ids_v0_query:
       type: object
       description: 'Unique request schema with API Named Query as i4.'
       required:
           - state_lgd_code
           - encrypted_aadhaar
       properties:
          state_lgd_code:
            type: string
            example: '29'
            description: 'State LGD Code is the unique 2-Digit LGD code assigned to a State/UT.'  
          encrypted_aadhaar:
            description: |
              1. AIU needs to encrypt the Aadhaar using the Public Key of the State core (to be provided during the integration process with the encryption code) and share the encrypted aadhaar in the api request.
              2. State Core will decrypt the Encrypted Aadhaar using their private key corresponding to the Public Key and response back with the corresponding Farmer ID.                            
            example: 'dff7b2676e23e0ce14d9f27d07ad525bcc2c870146a79d22dd62c702678acfc9'
            type: string 
    agristack_farmer_ids_v0_data:
       type: object
       description: 'Unique request schema with API Named Query as o4.'
       required:
          - status
       properties:
              status:
                type: string
                example: 'active'
                enum:
                  - active
                  - inactive
                  - does not exist
                descritpion: 'Status of the farmer ID at the state level in the form of the given options.'
              farmer_id:
                type: string
                example: '98765423456'
                description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
    agristack_farmer_id_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_farmer_id_v0_get_data'
          mapper_id:
            type: string
            example: 'i4:o4'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_farmer_ids_v0_query'
    agristack_croparea_v0_query:
       type: object
       description: 'Unique request schema with API Named Query as i5.'
       properties:
           year:
             type: string
             example: '2022-2023'
             description: 'Year range of the crop sown'
           season:
             type: string
             enum:
               - Rabi
               - Kharif
               - Zaid
             description: 'Season name mentioned in the enums.'
           state_lgd_code:
             type: string
             example: '29'
             description: 'LGD code of the state'
    agristack_croparea_v0_data:
      type: array
      description: 'Unique response schema with API Named Query as o5.'
      items:
       properties:
         sown_area: 
           type: string
           example: '20'
           description: 'Value of area sowing the provided crop in the given state/village'
         area_unit:
           type: string
           example: 'Hectare'
           enum:
              - Hectare
              - Acre
           description: 'Area measurement unit as Hectare or Acre.'
         irrigation_type:
           type: string
           enum:
             - Borewell
             - Boring Personal (Diesel)
             - Canal
             - Government Tubewell
             - Lake
             - Other Irrigation
             - Pond
             - River
             - Well
             - Boring Personal (Electricity)
             - Rahat (Water Pulley)
             - Handpump Government
             - Handpump Personal
             - Drip Irrigation
             - Sprinkler Irrigation
             - Un-irrigated
         crop_code:
             type: string
             example: '0760973'
             description: '7-digit Unique code of each crop as per central core registry'
         year:
             type: string
             example: '2022-2023'
             description: 'Year range of the crop sown'
         season:
             type: string
             enum:
               - Rabi
               - Kharif
               - Zaid
             description: 'Season name mentioned in the enums.'
         village_lgd_code:
             type: string
             example: '603110'
             description: 'LGD code of the village'
         survey_status:
             type: string
             enum: 
               - Completed
               - Approved
               - Grievance Redressed
               - Reconciled
    agristack_croparea_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the UPAg Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_croparea_v0_get_data'
          mapper_id:
            type: string
            example: 'i5:o5'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_croparea_v0_query'
    agristack_croparea_v1_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the UPAg Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_croparea_v1_get_data'
          mapper_id:
            type: string
            example: 'i5:o5v1'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_croparea_v0_query'
    agristack_minimum_support_price_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the MSP Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_minimum_support_price_v0_get_data'
          mapper_id:
            type: string
            example: 'i6:o6'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_minimum_support_price_v0_query'
    agristack_minimum_support_price_v0_data:
      type: array
      description: 'Unique response schema with API Named Query as o6.'
      items:
       properties:
         farmer_details: 
           type: object
           description: 'This set of attributes will include details of the farmer'
           properties:
              type_of_farmer:
                type: string
                example: 'Farmer'
                enum:
                  - Farmer
                  - Sharecropper
              name_as_per_khatauni:
               type: string
               example: 'Shanti'
               description: 'Name of the farmer as per khatauni'
              name_as_per_passbook:
                type: string
                example: 'Shanti'
                description: 'Name of the farmer as per passbook'
              name_of_father_or_husband:
                type: string
                example: 'Rameshwar'
                description: 'Name of farmers father or husband'
              name_as_per_aadhaar:
                type: string
                example: 'Shanti'
                description: 'Name of the farmer as per aadhaar'
              gender:
                type: string
                example: 'Female'
                enum:
                  - Male
                  - Female
                  - Transgender
              aadhaar_number:
                type: string
                example: '983748331234'
                description: 'Farmer aadhaar number'
              mobile_number:
                type: string
                example: '8787881342'
                description: 'Farmers mobile number'
              alternate_mobile_number:
                type: string
                example: '8787883882'
                description: 'Farmers alternate mobile number'
              category:
                type: string
                example: 'Small'
                description: 'It will have a set of master in the dropdown Category of the farmer'
         nomination_details:
           type: object
           description: 'This set of attributes will include detaisl of the nominated family member'
           properties:
            nomination_name:
              type: string
              example: 'Shankar'
              description: 'Name of the farmers nominated family member'
            gender:
              type: string
              example: 'Male'
              enum:
                - M
                - F
                - T
            relation_with_farmer:
              type: string
              example: 'Son'
              enum:
                - Spouse
                - Son
                - Daughter
                - Father
                - Mother
                - Brother
                - Sister
                - Other
            aadhaar_number:
              type: string
              example: '983748331234'
              description: 'Aadhaar number of farmers nominated family member'
         address_details:
          type: object
          description: 'This set of attributes will include the farmers residential details'
          properties:
            state_name:
              type: string
              example: 'Karnataka'
              description: 'State of the farmers residence'
            state_lgd_code:
              type: string
              example: '28'
              description: 'LGD code of the respective state.'
            district:
              type: string
              example: 'Dehradun'
              description: 'District of the farmers residence'
            tehsil:
              type: string
              example: 'Doiwala'
              description: 'Tehsil of the farmers residence'
            house_no:
              type: string
              example: '97 Laxmi Nagar'
              description: 'House number of the farmers residence'
         bank_details:
          type: object
          description: 'This set of attributes will include the farmers bank details'
          properties:
            name_of_accountholder_in_hindi:
              type: string
              example: 'शांति'
              description: 'Name of the account holder in Hindi'
            name_of_accountholer_in_english:
              type: string
              example: 'Shanti'
              description: 'Name of the account holder in English'
            name_of_bank_district:
              type: string
              example: 'Dehradun'
              description: 'Name of the bank district'
            name_of_bank:
              type: string
              example: 'Union Bank of India'
              description: 'Name of the Bank'
            bank_branch_name:
              type: string
              example: 'Doiwala Cental School Branch'
              description: 'Name of the Bank branch'
            ifsc_code:
              type: string
              example: 'UBIN0530689'
              description: 'Unique IFSC code of the bank branch'
            account_number:
              type: string
              example: 'UBIN3452745XXXXX1011'
              description: 'Unique account number'
            bank_account_status_by_pfms:
              type: string
              example: 'Verified'
              description: 'Status of Bank Account verification through PFMS.'
              enum:
                - Verified
                - Not Verified
    agristack_cropsown_v0_get_cropsown_by_farmer_data:
      type: array
      description: 'Unique response schema with API Named Query as o7.'
      items:
        properties:
          farm_id:
            type: string
            example: 'MP4528765306'
            description: 'Unique farmland ID assigned by Centre to a plot available in a state.'
          year:
            type: string
            example: '2023-2024'
            description: 'Range of the year for which the cropsown details have been captured.'
          season:
            type: string
            example: 'Rabi'
            enum:
              - Rabi
              - Kharif
              - Zaid
            description: 'Name of the season for which the cropsown details have been captured.'
          season_id:
            type: string
            example: '1'
            enum:
              - 1
              - 2
              - 3
            description: 'ID of each season as 1- Rabi, 2- Kharif, 3- Zaid'
          crop_code:
            type: string
            example: '0760973'
            description: '7-digit Unique code of each crop as per central core registry'
          crop_name:
            type: string
            example: 'Bottle Gourd'
            description: 'Name of the crop as per central registry.'
          sown_area:
            type: string
            example: '24'
            description: 'Area of the plot in which respective crop has been sown.'
          sown_area_unit:
            type: string
            example: 'HECTARE'
            enum:
              - HECTARE
              - ACRE
            description: 'Area measurement unit as HECTARE or ACRE.'
    agristack_pmfby_v0_data:
      type: array
      description: 'Unique response schema with API Named Query as o8'
      items:
        properties:
          farmer_details:
           type: object
           description: 'This set of attributes will include details of the farmer'
           properties:
             name:
              type: string
              example: 'Shanti'
              description: 'Full name of the Farmer'
             relationship:
              type: string
              example: 'Husband'
              description: 'relationship of the relatyive with the farmer'
             relative_name:
              type: string
              example: 'Pratap'
              description: 'Name of the relative'
             mobile_number:
              type: string
              example: '9872475425'
              description: 'Mobile number of the farmer'
             age:
              type: string
              example: '27'
              description: 'Age of the farmer'
             caste_category:
              type: string
              example: 'Rajput'
              description: 'Caste category of the farmer'
             gender:
              type: string
              example: 'Female'
              description: 'Gender of the farmer'
             farmer_type:
              type: string
              example: 'CropHolder'
              description: 'Type of farmer'
             farmer_category:
              type: string
              example: 'Category'
              description: 'Category of the farmer'
          residential_details:
            type: object
            description: ' This set of attributes will include farmer residence details'
            properties:
              state_name:
                type: string
                example: 'Karnataka'
                description: 'State of the farmer residential address'
              state_lgd_code:
                type: string
                example: '28'
                description: 'LGD code of the state.'
              district:
                type: string
                example: 'Dehradun'
                description: 'District of the farmer residential address'
              sub_district:
                type: string
                example: 'Doiwala'
                description: 'Sub-district of the farmer residential address'
              residential_village_or_town:
                type: string
                example: 'Vijay Nagar'
                description: 'Village or town name of the farmer residential address'
              address:
                type: string
                example: '097'
                description: 'HouseNumber or floor number of the farmer residential address'
              pincode:
                type: string
                example: '248140'
                description: 'Pin code of the farmer residential address'
          farmer_id:
            type: object
            properties:
              id_type:
                type: string
                example: 'Type'
                description: 'The type of farmer id'
              id_number:
                type: string
                example: '98765432100'
                description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
          accounts_details:
            type: object
            description: 'This set of attributes will include details of the farmer'
            properties:
              have_ifsc:
                type: string
                example: 'Yes'
                enum:
                  - Yes
                  - No
              ifsc_code:
                type: string
                example: 'UBIN0530689'
                description: 'The ifsc code of the farmer bank account'
              state_name:
                type: string
                example: 'Uttarakhand'
                description: 'The state of farmer bank account'
              state_lgd_code:
                type: string
                example: '28'
                description: 'LGD code of the state.'
              district:
                type: string
                example: 'Dehradun'
                description: 'District of the bank account'
              bank_name:
                type: string
                example: 'Union Bank of India'
                description: 'Name of the bank'
              bank_branch_name:
                type: string
                example: 'Doiwala Cental School Branch'
                description: 'Bank branch name'
              savings_account_no:
                type: string
                example: 'UBIN72894634980100101'
                description: 'Unique savings account number'
              confirm_savings_account_no:
                type: string
                example: 'UBIN72894634980100101'
                description: 'Confirm the Unique savings account number'
              captcha:
                type: string
                example: 'ex7Hm'
                description: 'Captcha value for confirmation'
          land_details:
            type: object
            description: 'This set of values include value land details of the farmer'
            properties:
              state:
                type: string
                example: 'Uttarakhand'
                description: 'State of the land of the farmer'
              state_lgd_code:
                type: string
                example: '28'
                description: 'LGD code of the state.'
              district:
                type: string
                example: 'Dehradun'
                description: 'District of the land of the farmer'
              sub_division:
                type: string
                example: 'Doiwala'
                description: 'Sub-division of the land of the farmer'
              block:
                type: string
                example: 'Vijay Nagar'
                description: ''
              gram_panchayat:
                type: string
                example: 'Chamba'
                description: 'Gram Panchayat of the land of the farmer'
              village:
                type: string
                example: 'Doriyal'
                description: 'Village of the farmer land'
              mix_cropping:
                type: string
                example: 'Yes'
                enum:
                  - Yes
                  - No
              crop_name:
                type: string
                example: 'Wheat'
                description: 'Name of the crop sown in farmers land'
              sowing_date:
                type: string
                minLength: 8
                maxLength: 8
                format: date
                example: 19000101
                description: 'Sowing date of the farmer land'
              survey_or_khata_number:
                type: string
                example: '7829'
                description: 'Khata number for the farmer land'
              khasra_or_plot_number:
                type: string
                example: '78'
                description: 'Khasra or plot number for the farmer land'
              insured_area:
                type: string
                example: '250 sq. ft.'
                description: 'Area of the land insured by the farmer'
          crop_details:
            type: object
            description: 'This set of attributes include details of the crop sown by the farmer'
            properties:
              passbook_photo:
                type: string
                example: '10101110100100011100101'
                description: 'Photo of the passbook'
              land_records:
                type: string
                example: '10101110100100011100101'
                description: 'Records of the sown land of the farmer'
              sowing_certificate:
                type: string
                example: '10101110100100011100101'
                description: 'Sowing certificate for the land'
              tenant_certificate:
                type: string
                example: '10101110100100011100101'
                description: 'Tenant certificate for the land'
          insurance_details:
            type: object
            description: 'This set of attributes include insurance details of the crop'
            properties:
              total_area_insured:
                type: string
                example: '257 sq. ft.'
                description: 'The total area that has been insured'
              total_farmer_premium:
                type: string
                example: '2000'
                description: 'The premium amount for the land insurance'
              total_sum_insured:
                type: string
                example: '200000'
                description: 'The amount of sum insured for the land'
    agristack_pmfby_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the PMFBY Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_pmfby_v0_get_data'
          mapper_id:
            type: string
            example: 'i1:o8'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_v0_farmer_query'
    agristack_eprocurement_v0_get_data:
      type: object
      properties:
        query_name: 
          type: string
          description: 'Name of the e-Procurement Use Case as defined in Agri Stack API Documentation'
          example: 'agristack_eprocurement_v0_get_data'
        mapper_id: 
          type: string
          example: 'i7:o9'
          description: 'each use case has been assigned with a unique mapper ID in Agri Stack Documentation. The data seeker needs to provide that ID here'
        query_params:
          type: array
          items: 
            $ref: '#/components/schemas/agristack_eprocurement_v0_query'
    agristack_eprocurement_v0_query:
      type: object
      description: 'Unique request schema with API named Query as i7'
      required:
            - village_lgd_code
            - khasra_number
            - season
            - year
      properties: 
        village_lgd_code:
          type: string
          example: '29'
          description: 'State LGD Code is the unique 2-Digit LGD code assigned to a State/UT.'
        khasra_number: 
          type: string
          example: '249/592'
          description: 'Khasra Number as per ROR'
        unique_number: 
          type: string
          example: 'NA'
          description: 'Unique number for the respective land.'
        season:
          type: string
          example: 'Rabi'
          description: 'Name of the season'
          enum:
            - Rabi
            - Kharif
            - Zaid
        year:
          type: string
          description: 'Range of the year for the respective season'
          example: '2023-2024'
    agristack_eprocurement_v0_data:
      type: object
      description: 'Unique response schema with API named Query as O9'
      properties: 
        district_name: 
          type: string
          example: 'Dehradun'
          description: 'District name'
        subdistrict_name:
            type: string
            example: 'Doiwala'
            description: 'Name of the Tehsil as per LGD'
        village_name:
            type: string
            example: 'Mirzapur Sharki'
            description: 'Name of the village.'
        village_lgd_code:
            type: string
            example: '2810'
            description: 'Village LGD code of the plot'
        season:
            type: string
            description: Name of the season for which the attribute's value is sought
            enum:
              - Rabi
              - Kharif
              - Zaid
        year:
          type: string
          example: '2022-2023'
          description: 'Range of the season in the form of year.'       
        khasra_number:
            type: string
            example: '249/592'
            description: 'Khasra Number as per ROR'
        total_area:
            type: string
            example: '0.0170'
            description: 'Total area of the plot for the given Khasra number.'
        area_unit:
            type: string
            example: 'Hectare'
            description: 'Measuring unit of the area'
            enum: 
              - Hectare
              - Acre
        unique_number:
            type: string
            example: "NA"
            description: 'Unique number for the respective land.'
        survey_details:
          type: object
          properties:
            owner_details:
              type: array
              description: 'Details of the Land Owners'
              items:
               properties:
                owner_name:
                  type: string
                  example: 'Ram Singh'
                  description: 'Full Name of the land owner'
                identifier_name:
                  type: string
                  example: 'Surajprakash Singh'
                  description: 'Full Name of father of the land owner'
                identifier_type:
                  type: string
                  example: 'C/O'
                  description: 'Type of the identifier as, C/O, F/O, D/O, W/O.'
                owner_extent:
                  type: string
                  example: '0.0170'
                  description: 'Area of the land owned by respective owner.'
            na_area_details:
              type: array
              description: 'Non agriculture land details'
              items:
                properties:
                  na_area:
                    type: string
                    example: '0.03000'
                    description: 'Area of the Non-Agricultural land.'
                  na_type:
                    type: string
                    example: 'House'
                    description: 'Type of non-agricultural land.'
                  na_image:
                    type: array
                    description: 'Images of the non-agricultural land'
                    items:
                      type: string
            fallow_area_details:
              type: array
              description: 'fallow area land details.'
              items:
                properties:
                  fellow_area: 
                    type: string
                    example: '0.03000'
                    description: 'Area of the fallow land.' 
                  fellow_image:
                    type: array
                    description: 'Images of the fellow land'
                    items:
                      type: string
            harvested_area_details:
              type: array
              description: 'fallow area land details.'
              items:
                properties:
                  harvested_area: 
                    type: string
                    example: '0.03000'
                    description: 'Area of the harvested land.' 
                  harvested_image:
                    type: array
                    description: 'Images of the harvested land.'
                    items:
                      type: string
            crop_details:
              type: array
              description: 'Crop details of the respective khasra/survey number.'
              items:
                properties:
                  crop_number:
                    type: string
                    example: '1'
                    description: 'Sequential number of the crops sown in the respective land.'
                  crop_code:
                    type: string
                    example: '017010'
                    description: 'Crop Code as per central crop registry.'
                  crop_class:
                    type: string
                    example: '3'
                    description: 'Class of crop.'
                  crop_name:
                    type: string
                    example: 'Wheat'
                    description: 'Name of the crop as per central crop registry.'
                  crop_area:
                    type: string
                    example: '0.101'
                    description: 'Sown area of the crop.'
                  crop_variety:
                    type: string
                    example: 'Local'
                    description: 'Variety of the crop.'
                  crop_type:
                    type: string
                    example: 'Main'
                    description: 'Type of the crop'
                  sowing_date:
                    type: string
                    example: '01-08-2023'
                    description: 'Sowing date of the crop in DD-MM-YYYY format.'
                  stage:
                    type: string
                    example: 'Ripened'
                    description: 'Stage of the crop growth.'
                  irrigation_type:
                    type: string
                    example: 'Irrigated'
                    description: 'Irrigation type os per crop survey data.'
                  irrigation_source:
                    type: string
                    example: 'Lake'
                    description: 'Source of irrigation as per Crop Survey Data.'
                  crop_images:
                    type: array
                    description: 'Images of the crops sown.'
                    items:
                      type: string
    agristack_price_support_scheme_v0_get_data:
      type: object
      properties:
        query_name:
            type: string
            description: 'Name of the Price Support Schema use case as defined in Agri Stack API Documentation'
            example: 'agristack_price_support_scheme_v0_get_data'
        mapper_id:
            type: string
            example: 'i9:o11'
            description: 'each use cse has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that in here.'
        query_params:
            type: array
            items:
                $ref: '#/components/schemas/agristack_price_support_scheme_v0_query'
    agristack_price_support_scheme_v0_query:
        type: object
        description: 'Unique request schema with API named query as i9'
        properties:
            state_lgd_code:
                type: string
                example: '29'
                description: 'State LGD code is the unique LGD code assigned to a State/UT.'
            vilage_lgd_code:
                type: string
                example: '29'
                description: 'LGD code of a village.'
            survey_number:
                type: string
                example: '67'
                description: 'Survey Number of a plot'
            season:
                type: string
                example: 'Rabi'
                description: 'Name of the agriculture season having a single value out of rabi, kharif, zaid.'
                enum:
                  - Rabi
                  - Kharif
                  - Zaid
            year:
                type: string
                example: '1994-1995'
                description: 'Range of the season in the form of the year'
    agristack_price_support_scheme_v0_data: 
        type: object
        description: 'Unique response schema with API named Query as o11.'
        properties:
          state_lgd_code:
            type: string
            example: '29'
            description: 'State LGD code is teh unique LGD code assigned to a State/UT.'
          vilage_lgd_code:
            type: string
            example: '29'
            description: 'LGD code of a village.'
          survey_number:
            type: string
            example: '67'
            description: 'Survey Number of a plot'
          season:
            type: string
            example: 'Rabi'
            description: 'Name of the agriculture season having a single value out of rabi, kharif, zaid.'
            enum:
              - Rabi
              - Kharif
              - Zaid
          year:
            type: string
            example: '1994-1995'
            description: 'Range of the season in the form of the year'
          survey_details:
            type: array
            items:
              properties:
                survey_number:
                  type: string
                  example: '67/1'
                  description: 'Complete Survey Number of the plot'
                crop_code:
                  type: string
                  example: '0170016'
                  description: 'Unique code for the crop'
                crop_name:
                  type: string
                  example: 'Wheat'
                  description: 'Name of the crop for the price support scheme'
                crop_area:
                  type: string
                  example: '0.101'
                  description: 'Sown area of the crop.'
                area_unit:
                  type: string
                  example: 'HECTARE'
                  enum:
                    - HECTARE
                    - ACRE
                  description: 'Area measurement unit as HECTARE or ACRE.'
                farmer_names:
                  type: array
                  description: 'Name of the farmer'
                  items:
                    type: string
                    example: 'Ramesh'
    agristack_land_data_v0_get_data:
      type: object
      properties:
        query_name:
            type: string
            description: 'Name of the Land Data use case as defined in Agri Stack API Documentation'
            example: 'agristack_land_data_v0_get_data'
        mapper_id:
            type: string
            example: 'i10:o12'
            description: 'each use cse has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that in here.'
        query_params:
            type: array
            items:
                $ref: '#/components/schemas/agristack_land_data_v0_query'
    agristack_land_data_v0_query:
      type: object
      description: 'Unique request schema with API named query as i10'
      properties:
        village_lgd_code:
          type: string
          example: '66310'
          description: 'LGD code assigned to a village'
        land_identifier:
            $ref: '#/components/schemas/land_identifier'
      required:
        - village_lgd_code
        - land_identifier
    agristack_land_data_v0_data:
        type: object
        description: 'Unique response schema with API named query as o12'
        required:
            - village_lgd_code
            - land_identifiers
            - total_plot_area
            - area_unit
            - owner_details
        properties:
            village_lgd_code:
                type: string
                example: '29'
                description: 'Unique LGD code of a village as assigned by the Local Government Body (LGD).'
            land_identifiers:    
              type: object
              required: 
                  - survey_number
              properties:
                  survey_number:
                    type: string
                    example: '67A'
                    description: |
                        This is the complete Survey Number/Sub Survey Number with the character portion (if available) along with delimeter ("/", ".", "-" etc.) as the case may be, applicable to the state. For some states, it can be Khasra Number, Dak Number, Khatian Number etc. 
                  unique_land_code:
                    type: string
                    example: '2129360053000062'
                    description: |
                      This is the unique state specific land code assigned to the resepective plot. It may be available in few states. If both are available then please provide either Survey Number of unique land code.
            total_plot_area:
              type: integer
              example: '3'
              description: 'Integer part of total area of the plot for the given sub/survey number or unique land code.'
            total_plot_area_decimal_part:
              type: 'string'
              example: '2030'
              description: 'This will contain the decimal part of the total area.'
            area_unit: 
              type: string
              enum:
                - HECTARE
                - ACRE
              description: 'Measuring unit of the total plot area.'
            owner_details:
              type: array
              description: |
                This field will contain the owner details of the respective Survey/Sub-Survey/State Specific Land ID. Within the provided owner details, joint ownership can be determined by either having the same Khata Number for multiple landowners or by having same Main Owner Number against other joint owners of the same piece of land. Illustrative examples are provided in the table below:
               
                Owner Name     |   Khata Number     |   Ownership Type
                ---------------|--------------------|------------------
                A              |    1               | Joint Owner with B and C  
                B              |    1               | Joint Owner with A and C
                C              |    1               | Joint Owner with B and A
                D              |    2               | Single Owner

                Following table explains the joint ownership in case of Owner Number.
               
                Owner Name     |   Owner Number      |    Main Owner Number  |   Ownership Type
                ---------------|---------------------|-----------------------|---------------------
                A              |    1                |       1               |  Joint Owner with B and C
                B              |    2                |       1               |  Joint Owner with A and C
                C              |    3                |       1               |  Joint Owner with B and A
                D              |    4                |       4               |  Single Owner 
              items:
                properties:
                   khata_number:
                      type: string
                      example: '1'
                      description: 'Khata number of the farmer in this record. (if applicable).'
                   farm_id:
                      type: string
                      example: 'KA8688768886'
                      description: 'Unique Farm identifier assigned to a piece of land by its respective state.'
                   owner_number:
                      type: string
                      example: '1'
                      description: |
                        Unique identifier assigned to individuals or entities who hold ownership rights to a particular parcel of land. It is a numerical designation used to distinguish one owner from another in the land records database. States are requested to maintain unique owner numbers for all owners against a land parcel.
                   main_owner_number:
                       type: string
                       example: '1'
                       description: |
                            In situations where there are multiple owners associated with a particular parcel of land for whom no extent has been defined, designating a main owner helps establish a primary point of reference for administrative or legal purposes. States are requested to maintain a main owner number for all owners against a land parcel. The main owner number will be identified as following:

                            | Ownership Type |  Owner Number  | Main Owner Number|
                            |----------------|----------------|------------------|
                            |  Single        |  1  | 1   |
                            | Joint    | 1, 2, 3,..so on. | Lowest owner number. For the given example, it will be "1".|
                            | Multiple  | 1,2,3,..so on.  |  Same as owner number |
                            | Some Joint and Some Multiple  | For all owners whom extent is not defined, their  main owner number will be the lowest owner number among them. For all owners whom extent is defined, owner number and main owner number will be same. |
                   owner_name_ror: 
                       type: string
                       example: 'सन्तराम'
                       description: 'Name of the owner as per ROR records.'
                   owner_name_english: 
                       type: string
                       example: 'Santram'
                       description: 'Name of the owner in English language.(Shall not be treated at par with RoR name.)'
                   owner_extent:
                       type: integer
                       example: '3'
                       description: 'Integer part of total area of the plot owned by the owner. if Owner Extent is provided, then no need to provide owner_share.'
                   owner_extent_decimal_part:
                       type: string
                       example: '0034'
                       description: 'This will contain the decimal part of the owner extent.'
                   owner_share:
                       type: string
                       example: "20%"
                       description: 'Share of the owner from the total plot area. Some states maintain land share in percentage instead of actual area, hence if owner share is provided, then no need to provide owner extent.'
                   land_usage_type:
                      type: string
                      example: 'A'
                      description: 'Type of use of land either as Agriculture (A) or Non Agricultural (NA).'
                      enum:
                        - A
                        - NA
                   owner_category:
                      type: string
                      example: 'Private'
                      description: 'Type of ownership.'
                      enum:
                        - Private
                        - Government
                   identifier_type:
                       type: string
                       example: 'C/O'
                       description: 'This field will notify the relationship of the identifier name with the farmer. Type of the identifier may be like, C/O, D/O, S/O, W/O. The enums of this fields will be updated once all possible options being captured by various states will be received.'
                       enum:
                          - C/O
                          - D/O 
                          - S/O
                          - W/O
                          - H/O
                          - F/O
                   identifier_name_ror: 
                       type: string
                       example: 'लक्ष्मीप्रसाद'
                       description: 'Name of the identifier of the owner as per ROR data. It is the person with whom the farmer is getting identified.'
                   identifier_name_english: 
                       type: string
                       example: 'Laxmiprasad'
                       description: 'Name of the identifier of the owner in English Language. It is the person with whom the farmer is getting identified.(Shall not be treated at par with Identifier name as per RoR.)'
                   government_liability:
                     type: string
                     description: 'For example, government liabilities are some conditions put on a piece of land, like a land cannot be sold for 15 years without the permission of the government. If those records are a part of ROR then they need to be passed against this field. If there are multiple liabilities, then they need to be passed as comma separated values.'
                   private_liability:
                     type: string
                     description: 'For example, private liabilities are those where a farmer has taken a loan against a land or liabilities by banks or private agencies. If there are multiple liabilities, then they need to be passed as comma separated values.'
                required:
                    - owner_name_ror
                    - owner_number
                    - main_owner_number
    land_identifier:
        description: 'This object contains land data identifiers for all states. Here either Survey Number OR Unique Code would be mandatory.'
        anyOf:
          - $ref: '#/components/schemas/survey_number'
          - $ref: '#/components/schemas/unique_land_code'
    survey_number:
      type: object
      properties:
       survey_number:
        type: string
        example: '67A'
        description: |
         This is the Complete Survey Number/Sub Survey Number with the character portion (if available) along with
         delimeter as the case may be, applicable to the state. For some states, it can be Khasra Number, Dak
         Number, Khatian Number etc. a Few Examples of the Survey Number or Sub Survey Number are as following:
         
           State Name | Sub/Survey Number Sample
           -----------|--------------------- 
           Assam      |  125
           Bihar      |   25
           Odisha     |   16/371
          Andhra Pradesh|123/A/456
          Gujarat     |   697
    sub_survey_number:
      type: object
      properties:
       sub_survey_number:
        type: string
        example: '67A/1'
        description: 'This is the part of a survey number separated by a delimiter like, "/", "-","." etc. It can be Hissa Number, Sub Division, Plot Number etc with the character portion of survey number, if available.'
    up_land_identifier:
      anyOf:
        - $ref: '#/components/schemas/unique_land_code'
        - $ref: '#/components/schemas/khasra_number'
    unique_land_code:
      type: object
      properties:
        unique_land_code:
          type: string
          example: '2129360053000062'
          description: |
            This is the unique state specific land code assigned to the resepective plot.
            Presently, following state(s) are using Unique Codes for their lands:
            
            State Name    |  Unique Code Format
            --------------|--------------------
            Uttar Pradesh | 2129360053000062
    farm_id:
      type: object
      properties:
        farm_id:
          type: string
          description: 'Unique Farm identifier assigned to a piece of land by its respective state.'
          example: 'KA9876543678'
    khasra_number:
      type: object
      properties:
       khasra_number:
        type: string
        example: '43'
        description: 'This is the unique khasra number of the plot.'
    ap_land_identifier:
        type: object
        description: 'This object contains the unique land data identifiers for Andhra Pradesh state.'
        properties:
         khasra_number:
            type: string
            example: '67'
            description: 'Survey Number of a plot'
    bh_land_identifier:
      $ref: '#/components/schemas/unique_land_code'
    as_land_identifier:
      type: object
      properties:
         khasra_number:
             type: string
             example: '4'
             description: 'This is the unique khasra number of the plot.'
    agristack_farmer_id_v0_query:
      type: array
      description: 'Unique request schema with API Predicate query.'
      items:
       properties:
        seq_number:
          type: integer
          example: '1'
          description: 'Sequence number of the criteria. All criterias falling under the same sequence number will be combined in a single query with the specified condition.'
        criteria:
          type: object
          description: 'This object will contain the attribute name and its value.'
          properties:
            attribute_name:
              type: string
              example: 'crop_area'
              description: 'Name of the attribute should be passed against this attribute.'
              enum:
                - age
                - dob
                - gender
                - village_lgd_code
                - owner_extent
                - farmer_category
                - caste_category
                - crop_name
                - year
                - season
                - irrigation_type
                - survey_number
                - number_of_lands
                - crop_area
                - area_unit
            operator:
              type: string
              example: 'lt'
              enum:
                - gt
                - lt
                - eq
                - ge
                - le
                - in
            attribute_value:
              oneOf:
                - type: string
                - type: integer
                - type: number
                - type: boolean
              example: "200.12"
          required:
            - seq_num
            - attribute_name
            - operator
            - attribute_value
        condition:
                description: 'Condition will be defined in each criteria, which will be related to other criteria with the same sequence number. If the condition value is "NA", then, the respective sequence will end ther.'
                type: string
                enum:
                  - and
                  - or
                  - not
                  - NA
                example: and
      required:
        - criteria
    agristack_farmer_id_v0_data:
        type: object
        description: 'Unique response schema with API named query as o13'
        properties:
            farmer_id:
                type: array
                description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
                items:
                   type: string
                   example: '87654398765'
    agristack_soil_health_v0_data:
      type: object
      required:
        - farmer_id
        - farmer_name
        - language
        - mobile_number
        - state_lgd_code_of_farmer
        - district_lgd_code_of_farmer
        - block_lgd_code_of_farmer
        - village_lgd_code_of_farmer
        - address
        - land_data
      description: 'Unique response schema with API Named Query as o14.'
      properties:
          farmer_id: 
            type: string
            description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
            example: '98765423456'
          farmer_name:
            type: string
            description: 'Name of the farmer.'
            example: 'John Doe'
          language:
            type: string
            description: 'Prefered language of the farmer in which he/she wish to see the Soil health card.'
            example: 'English'
          mobile_number:
            type: string
            description: 'Mobile number of the farmer.'
            example: '9234567890'
          email:
            type: string
            description: 'Email address of the farmer.'
            example: 'john.doe@example.com'
          state_lgd_code_of_farmer:
            type: string
            description: 'LGD code of the state where the farmer resides.'
            example: '28'
          district_lgd_code_of_farmer:
            type: string
            description: 'LGD code of the district where the farmer resides.'
            example: '524'
          block_lgd_code_of_farmer:
            type: string
            description: 'LGD code of the block where the farmer resides.'
            example: '5836'
          village_lgd_code_of_farmer:
            type: string
            description: 'LGD code of the village where the farmer resides.'
            example: '598827'
          address:
            type: string
            description: 'Address of the farmer.'
            example: '123 Main Street, City'
          land_data:
            type: array
            items:
              properties:
                plot_location:
                  type: string
                  description: 'The Plot location can  be in either WKT format or Geo JSON.'
                  example: 'POLYGON((77.89146113266614 23.013132253885196,77.89392876495984 23.014060499241317,77.89356398453381 23.01135474495115,77.89143967499402 23.012480503328863,77.89146113266614 23.013132253885196))'
                state_lgd_code_of_plot:
                  type: string
                  description: 'LGD code of the state where the plot is located.'
                  example: '28'
                district_lgd_code_of_plot:
                  type: string
                  description: 'LGD code of the district where the plot is located.'
                  example: '524'
                block_lgd_code_of_plot:
                  type: string
                  description: 'LGD code of the block where the plot is located.'
                  example: '5836'
                village_lgd_code_of_plot:
                  type: string
                  description: 'LGD code of the village where the plot is located.'
                  example: '598827'
                survey_number:
                  type: string
                  description: 'Survey number of the plot.'
                  example: '123/456'
                plot_area:
                  type: string
                  description: 'Area of the plot.'
                  example: '10.5'
                plot_area_unit:
                  type: string
                  description: 'Unit of measurement for the plot area.'
                  example: 'Acre'
                  enum:
                  - Acre
                  - Hectare
              required:
                - plot_location
                - state_lgd_code_of_plot
                - district_lgd_code_of_plot
                - block_lgd_code_of_plot
                - village_lgd_code_of_plot
                - survey_number
                - plot_area
                - plot_area_unit
    agristack_farmer_details_v0_data:
      type: object
      description: 'Unique response schema with API Named Query as o16.'
      properties:
        farmerDetails:
          type: object
          description: 'Details of the farmer.'
          properties:
            farmerId:
              type: integer
              example: 10215345287
              description: 'Unique identifier for the farmer.'
            fullNameEng:
              type: string
              example: 'Shanti'
              description: 'Full name of the farmer in English.'
            fullNameLocalLang:
              type: string
              example: 'शांति'
              description: 'Full name of the farmer in the official language.'
            dob:
              type: string
              example: '10/05/1974'
              description: 'Date of birth of the farmer in the format DD/MM/YYYY.'
            gender:
              type: string
              example: 'M'
              description: 'Gender of the farmer.'
              enum: 
                - M
                - F
                - T
            mobile:
              type: string
              example: '91-9987654321'
              description: 'Phone number of the farmer.'
            address:
              type: string
              description: 'Address details of the farmer.'
              example: '12th Cross, Sampige Road, Adiganahalli, Bangluru, Karnataka, India'    
            villageName:
              type: string
              example: 'Adiganahalli'
              description: 'Name of the village.'
            villageLgdCode:
              type: string
              example: '33610'
              description: 'LGD code assigned to the village of the farmer.'
            farmerCategory:
              type: string
              example: 'Marginal'
              description: 'Category of the farmer (e.g., Marginal, Small, Medium).'
            identifier_Type:
              type: string
              example: 'W/O'
              description: 'Type of identifier (e.g., W/O for wife of, S/O for son of).'
            identifier_Name:
              type: string
              example: 'Shri Mukesh'
              description: 'Name of the identifier (e.g., husband or father name).'
            casteCategory:
                  type: string
                  example: 'General'
                  description: 'Caste category of the farmer.'
                  enum: 
                    - SC
                    - ST
                    - General 
                    - OBC 
                    - OT 
        plotDetails:
          type: array
          description: 'Details of the plots owned by the farmer.'
          items:
            type: object
            properties:
              farmId:
                type: string
                example: 'MP4528765306'
                description: 'Unique identifier for the farm.'
              surveyNo:
                type: string
                example: '35'
                description: 'Survey number of the plot.'
              subSurveyNo:
                type: string
                example: '35/1'
                description: 'Sub-survey number of the plot.'
              villageLgdCode:
                type: string
                example: '60330'
                description: 'Local Government Directory (LGD) code for the village.'
              villageName:
                type: string
                example: 'Adiganahalli'
                description: 'Name of the village.'
              plotGeometry:
                type: object
                description: 'Geometry information of the plot.'
                properties:
                  MULTIPOLYGON:
                    type: array
                    items:
                      type: array
                      items:
                        type: array
                        items:
                          type: number
                          description: 'Coordinate values of the plot geometry.'
              ulPin:
                type: string
                example: 'string'
                description: 'UL PIN (Urban Land Parcel Identification Number) of the plot.'
              farmPlotArea:
                type: string
                example: '20'
                description: 'Area of the farm plot.'
              unitOfArea:
                type: string
                example: 'Hectare'
                enum:
                  - Hectare
                  - Acre
                description: 'Area measurement unit as Hectare or Acre.'
              landUseClassification:
                type: string
                example: 'Agriculture Land'
                description: 'Classification of the land use (e.g., Agriculture Land, Residential).'
        cropsownDetails:
          type: array
          description: 'Details of the crops sown by the farmer.'
          items:
            type: object
            properties:
              farmId:
                type: string
                example: 'MP4528765306'
                description: 'Unique identifier for the farm.'
              year:
                type: string
                example: '2023-2024'
                description: 'Crop sowing year.'
              season:
                type: string
                enum:
                   - Rabi
                   - Kharif
                   - Zaid
                description: 'Season of the crop survey.'
              seasonId:
                type: integer
                example: 1
                description: 'Identifier for the crop sowing season.'
              cropId:
                type: integer
                example: 17
                description: 'Identifier for the crop.'
              cropName:
                type: string
                example: 'Wheat'
                description: 'Name of the crop.'
              sownArea:
                type: string
                example: '24'
                description: 'Area of the crop sown.'
              sownAreaUnit:
                type: string
                example: 'Hectare'
                description: 'Area measurement unit as Hectare or Acre.'
              cropPhotos:
                type: array
                description: 'Photos of the crop.'
                items:
                  type: object
                  properties:
                    photo:
                      type: string
                      example: 'ByteArray'
                      description: 'Byte array representation of the crop photo.'
              plotGeometry:
                type: object
                description: 'Geometry information of the plot where the crop is sown.'
                properties:
                  MULTIPOLYGON:
                    type: array
                    items:
                      type: array
                      items:
                        type: array
                        items:
                          type: number
                          description: 'Coordinate values of the plot geometry.'
              sowingDate:
                type: string
                example: '12/12/2019'
                description: 'Date on which the crop was sown.'
              irrigationType:
                type: string
                example: 'Surface Irrigation'
                description: 'Type of irrigation used for the crop.'
    agristack_soil_health_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Soil Health Data Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_soil_health_v0_get_data'
          mapper_id:
            type: string
            example: 'i2:o14'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_credit_v0_cropsown_query'
    agristack_get_farmer_details_v0_data:
      type: object
      properties:
        query_name:
          type: string
          description: 'Name of the Get Survey Numbers use case as defined in Agri Stack API Documentation.'
          example: 'agristack_get_farmer_details_v0_data'
        mapper_id:
          type: string
          example: 'i2:o16'
          description: 'Each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
        query_params:
          type: array
          items:
            $ref: '#/components/schemas/agristack_credit_v0_cropsown_query'
    agristack_get_survey_number_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Get Survey Numbers use case as defined in Agri Stack API Documentation.'
            example: 'agristack_get_survey_number_v0_get_data'
          mapper_id:
            type: string
            example: 'i11:o15'
            description: 'Each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_get_survey_number_v0_query'
    agristack_get_survey_number_v0_query:
     type: object
     description: 'Unique schema ID is i11'
     properties:
       state_lgd_code:
          $ref: '#/components/schemas/state_lgd_code'
       village_lgd_code:
          $ref: '#/components/schemas/village_lgd_code'
       survey_number_prefix:
          type: string
          example: 123
          description: |
            In this field, the AIU has the option to transmit either the complete main survey number or a portion of it. Subsequently, the AIP will execute a query using the LIKE operator to identify all associated sub-survey numbers within the corresponding village and provide them in the response.
    agristack_get_survey_number_v0_data:
      type: object
      description: 'Schema ID for this output will be o15.'
      properties:
        state_lgd_code:
          $ref: '#/components/schemas/state_lgd_code'
        village_lgd_code:
          $ref: '#/components/schemas/village_lgd_code'
        survey_number_prefix:
           $ref: '#/components/schemas/agristack_get_survey_number_v0_query/properties/survey_number_prefix'
        survey_details:
          type: array
          items:
            properties:
               survey_number:
                  type: string
                  example: '123A'
                  description: 'This is the survey number with the character portion. For some states, it can be Khasra Number, Dak Number etc.'
               sub_survey_number:
                  type: string
                  example: '123A/1'
                  description: 'This is the part of a survey number separated by a delimiter like, "/", "-","." etc. Here complete sub-survey number to be provided.'
    state_lgd_code:
      type: string
      example: '29'
      description: 'State LGD Code is the unique 2-Digit LGD code assigned to a State/UT.'
    village_lgd_code:
      type: string
      description: 'unique LGD code assigned to a village available under a State/UT.'
      example: '625373'
    agristack_loan_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Loan schema as defined in Agri Stack API Documentation.'
            example: 'agristack_loan_v0_get_data'
          mapper_id:
            type: string
            example: 'i12:o17'
            description: 'Each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: '#/components/schemas/agristack_farmer_id_data_v0_query'
    agristack_farmer_id_data_v0_query:
      type: object
      description: 'Unique schema ID is i12.'
      required:
         - farmer_id
      properties:
         farmer_id:
             description: 'The unique ID generated by a central authority (CPMU) and allocated to the farmer in order to uniquely identify him or her as a farmer in the country.'
             type: string
             example: '12341234123'
    agristack_loan_v0_data:
      type: object
      description: 'Unique schema id is o17.'
      required:
         - farmer_demographic_data
         - farmer_land_data
         - crop_sown_data
      properties:
              farmer_demographic_data:
                  type: object
                  required:
                     - farmer_id
                     - farmer_name
                     - father_name
                     - dob
                     - gender
                     - pmkid
                     - occupation
                  properties:
                    farmer_id:
                      type: string
                      description: 'Unique farmer ID of the farmer'
                      example: '98765427875'
                    farmer_name:
                      type: string
                      description: 'Name of the farmer'
                      example: 'Shanti'
                    father_name:
                      type: string
                      description: 'Name of the father'
                      example: 'Ramesh'
                    dob:
                      type: string
                      description: 'Date of birth of the farmer'
                      example: '15/12/1999'
                    gender:
                      type: string
                      description: 'Gender of the farmer'
                      enum:
                        - M
                        - F
                        - T
                    caste_category:
                      type: string
                      description: 'Caste category of the farmer'
                      enum:
                        - SC
                        - ST
                        - OBC
                        - G
                        - OT
                    pmkid:
                      type: string
                      description: 'PM Kisan ID of the farmer'
                      example: 'MH147876234'
                    pan_number:
                      type: string
                      description: 'PAN number of the farmer'
                      example: 'ABCGD1234R'
                    pan_alt_id_proof:
                      type: string
                      description: 'Name of the Alternate ID if PAN Number is not provided.'
                      example: 'Voter ID'
                    pan_alt_id_number:
                      type: string
                      description: 'Alternate ID number'
                      example: 'MH009753'
                    occupation:
                      type: array
                      description: 'List of occupations, any from Agriculture, Horticulture, Fisheries,             - Sericulture, Apiculture, Livestock and Dairy, Poultry, Vermiculture'
                      items:
                        type: string
                      enum:
                        - Agriculture
                        - Horticulture
                        - Fisheries
                        - Sericulture
                        - Apiculture
                        - Livestock and Dairy
                        - Poultry
                        - Vermiculture
                    permanent_address:
                      type: string
                      description: 'Permanent address of the farmer'
                      example: '13/39, 3rd B Main Road, Bengaluru North, Karnataka 560023'
                    permanent_state_lgd_code:
                      type: string
                      description: 'State LGD code of the permanent address'
                      example: "29"
                    permanent_village_lgd_code:
                      type: string
                      description: 'Village LGD code of the permanent address'
                      example: "613080"
                    permanent_pincode:
                      type: string
                      description: 'Pincode of the permanent address'
                      example: "110007"
                    family_member_details:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: 'Name of the family member'
                              example: "Rajesh"
                            dob:
                              type: string
                              description: 'Date of birth of the family member'
                              example: "06/07/2000"
                            gender:
                              type: string
                              description: 'Gender of the farmer'
                              enum:
                                - M
                                - F
                                - T
                            occupation:
                              type: array
                              description: 'List of occupations, any from Agriculture, Horticulture, Fisheries,     Sericulture, Apiculture, Livestock and Dairy, Poultry, Vermiculture'
                              items:
                                type: string
                              enum:
                                - Agriculture
                                - Horticulture
                                - Fisheries
                                - Sericulture
                                - Apiculture
                                - Livestock and Dairy
                                - Poultry
                                - Vermiculture
              farmer_land_data:
                  type: array
                  items:
                    type: object
                    required:
                       - state_lgd_code
                       - village_lgd_code
                       - survey_number
                       - farm_id
                       - owner_no
                       - main_owner_no
                       - owner_type
                       - public_liability
                       - government_liability
                       - centroid_longitude
                       - centroid_latitude
                    properties:
                      state_lgd_code:
                        $ref: '#/components/schemas/state_lgd_code'
                      village_lgd_code:
                        $ref: '#/components/schemas/village_lgd_code'
                      survey_number:
                        type: string
                        description: |
                             This is the Complete Survey Number/Sub Survey Number with the character portion (if  available) along with delimeter as the case may be, applicable to the state. For some states, it can be Khasra Number, Dak Number, Khatian Number etc. a Few Examples of the Survey Number or Sub Survey Number are as following:

                             |State Name | Sub/Survey Number Sample|
                             |-----------|--------------------------|
                              |Assam      |  125|
                              |Bihar      |   25|
                              |Odisha     |   16/371|
                              |Andhra Pradesh|123/A/456|
                              |Gujarat     |   697|
                        example: '24'
                      unique_land_identifier:
                        type: string
                        description: 'Unique land code being maintained by states if no survey numbers are available'
                      farm_id:
                        type: string
                        description: 'Unique Farm identifier assigned to a piece of land by its respective state.'
                        example: 'KA9876543678'
                      owner_no:
                        type: string
                        example: '1'
                        description: |
                          Unique identifier assigned to individuals or entities who hold ownership rights to a particular parcel of land. It is a numerical designation used to distinguish one owner from another in the land records database. States are requested to maintain unique owner numbers for all owners against a land parcel.
                      main_owner_no:
                        type: string
                        example: '1'
                        description: |
                            In situations where there are multiple owners associated with a particular parcel of land for whom no extent has been defined, designating a main owner helps establish a primary point of reference for administrative or legal purposes. 
                      owner_type:
                        type: string
                        description: "This field explains what type of a owner is the respective farmer for the give survey number."
                        enum:
                           - Single
                           - Joint
                           - Multiple
                           - Mixed
                      land_usage_type:
                        type: string
                        description: 'Type of use of land either as Agriculture (A) or Non Agricultural (NA).'
                        enum:
                          - A
                          - NA
                      total_plot_area:
                        type: integer
                        example: 3
                        description: |
                           Integer part of total area from the plot for the given sub/survey number or unique land code.
                      total_plot_area_decimal:
                        type: 'string'
                        example: '2030'
                        description: 'This will contain the decimal part of the total area.'
                      extent_area_integer:
                        type: integer
                        example: 3
                        description: |
                           Integer part of farmer extent area from the plot for the given sub/survey number or unique land code.
                      extent_area_decimal:
                          type: 'string'
                          example: '2030'
                          description: 'This will contain the decimal part of the farmer extent area.'
                      area_unit:
                        type: string
                        enum:
                          - HECTARE
                          - ACRE
                        description: 'Measuring unit of the total plot area.'
                      public_liability:
                        type: string
                        description: 'For example, public liabilities are those where a farmer has taken a loan against a land or liabilities by banks or private agencies. If there are multiple liabilities, then they need to be passed as comma separated values.'
                      government_liability:
                        type: string
                        description: 'For example, public liabilities are those where a farmer has taken a loan against a land or liabilities by banks or private agencies. If there are multiple liabilities, then they need to be passed as comma separated values.'
                      centroid_longitude:
                        type: string
                        description: |
                          The centroid latitude and centroid longitude of a land refer to the geographical coordinates that represent the center or average position of all the points within the land's boundary. These coordinates are calculated based on the geometric center of the land's shape.
                        example: '79.379994097'
                      centroid_latitude:
                        type: string
                        description: |
                          The centroid latitude and centroid longitude of a land refer to the geographical coordinates that represent the center or average position of all the points within the land's boundary. These coordinates are calculated based on the geometric center of the land's shape.
                        example: '26.760159668'
                      plot_geometry:
                        type: object
                        description: 'Either centroid points or Plot Geometry will be shared.'
                        properties:
                          type:
                            type: string
                            description: Type of geometry
                            default: 'MultiPolygon'
                          coordinates:
                            type: array
                            description: Coordinates of the geometry
                            items:
                              type: array
                              items:
                                type: array
                                items:
                                  type: number
              crop_sown_data:
                  type: array
                  items:
                    type: object
                    required:
                       - farm_id
                       - state_lgd_code
                       - village_lgd_code
                       - survey_number
                       - year
                       - season
                       - sown_area_integer
                       - sown_area_decimal
                       - sown_area_unit
                       - crop_code
                    properties:
                      farm_id:
                        type: string
                        description: 'Unique Farm identifier assigned to a piece of land by its respective state.'
                        example: 'KA9876543678'
                      state_lgd_code:
                        $ref: '#/components/schemas/state_lgd_code'
                      village_lgd_code:
                        $ref: '#/components/schemas/village_lgd_code'
                      unique_land_identifier:
                        type: string
                        description: 'Unique land code being maintained by states if no survey numbers are available'
                      survey_number:
                        type: string
                        description: |
                             This is the Complete Survey Number/Sub Survey Number with the character portion (if  available) along with delimeter as the case may be, applicable to the state. For some states, it can be Khasra Number, Dak Number, Khatian Number etc. a Few Examples of the Survey Number or Sub Survey Number are as following:

                             |State Name | Sub/Survey Number Sample|
                             |-----------|--------------------------|
                              |Assam      |  125|
                              |Bihar      |   25|
                              |Odisha     |   16/371|
                              |Andhra Pradesh|123/A/456|
                              |Gujarat     |   697|
                      year:
                        type: string
                        description: 'Crop sown year range'
                        example: '2023-2024'
                      season:
                        type: string
                        enum:
                           - Rabi
                           - Kharif
                           - Zaid
                        description: 'Season of the crop survey.'
                      sown_area_integer:
                        type: integer     
                        description: 'Integer part of the sown area'
                        example: 2
                      sown_area_decimal:
                        type: string
                        description: 'Decimal part of the sown area.'
                        example: '30'
                      sown_area_unit:
                        type: string
                        example: 'HECTARE'
                        enum:
                          - HECTARE
                          - ACRE
                        description: 'Area measurement unit as HECTARE or ACRE.'
                      crop_code:
                        type: string
                        description: 'The crop code should be 7 digit unique code based on the Uniform Coding Scheme published by NIC.'
                        example: '0756401'
                      crop_name:
                        type: string
                        description: 'Name of the Crop'
                        example: 'Wheat'
                      crop_photo:
                        type: array
                        items:
                          type: object
                          properties:
                            photo:
                              type: string
                              description: Photo of the crop
                              example: 'ByteArray'
                      sowing_date:
                        type: string
                        description: 'Date of crop sown on the land.'
                        example: '12/12/2023'
                      irrigation_type:
                        type: string
                        description: 'Irrigation type as per the given master.'
                        example: 'Borewell'
                        enum:
                          - Borewell
                          - Boring Personal (Diesel)
                          - Canal
                          - Government Tubewell
                          - Lake
                          - Other Irrigation
                          - Pond
                          - River
                          - Well
                          - Boring Personal (Electricity)
                          - Rahat (Water Pulley)
                          - Handpump Government
                          - Handpump Personal
                          - Drip Irrigation
                          - Sprinkler Irrigation
                          - Un-irrigated
    agristack_land_validation_v0_query:
      type: object
      required:
        - village_lgd_code
        - unique_land_identifier
        - owner_name
        - header
      properties:
         header:
           type: object
           required:
              - sender_id
              - receiver_id
           properties:
             version:
                description: 'Messaging protocol specification version being used'
                type: string
                example: 0.1.0
             sender_id:
               description: 'Sender id registered with the receiving system. Used for authorization, encryption, digital sign verfication, etc., functions.'
               type: string
               example: '9d10494b-a217-4c7a-89e8-410d6f135gt6'
             receiver_id:
                description: 'receiver id registered with the calling system. Used for authorization, encryption, digital sign verfication, etc., functions.'
                type: string
                example: '9d10494b-a217-4c7a-89e8-410d6f135uy6'
         village_lgd_code:
            $ref: '#/components/schemas/village_lgd_code'
         unique_land_identifier:
            anyOf:
              - $ref: '#/components/schemas/survey_number'
              - $ref: '#/components/schemas/unique_land_code'
              - $ref: '#/components/schemas/farm_id'
         owner_number:
            type: string
            example: '1'
            description: |
              Unique identifier assigned to individuals or entities who hold ownership rights to a particular parcel of land. It is a numerical designation used to distinguish one owner from another in the land records database. States are requested to maintain unique owner numbers for all owners against a land parcel.
         owner_name:
            type: string
            example: 'Shanti'
            description: 'Name of the farmer/owner of the plot.'
         owner_extent:
            type: integer
            example: '3'
            description: 'Integer part of total area of the plot owned by the owner.'
         owner_extent_decimal_part:
            type: string
            example: '0034'
            description: 'This will contain the decimal part of the owner extent.'
    agristack_land_validation_v0_data:
       type: object
       properties:
          status_code:
             type: integer
             example: 1
             description: 'Unique code for each error'
          code_description:
             type: string
             example: 'Successful'
             description: |
                | status_code     |    code_description    |
                |-----------------|---------------------------|
                |  1   | Successful |                         
                | 2    | Authentication Failed due to Incorrect User Name or Incorrect Password|
                |  3   | Invalid Village Code OR Invalid Unique Land Identifier OR Invalid Owner Number  |
                |  4   | Land API Service Issue |
                |  5   |  Land Details do not exist.|
    farmerIdSet:
       type: object
       description: 'Object defining a set of farmer identifiers; the AIU seeks data of all farmers whose identifiers are in this set'
       properties:
           count:
              type: integer
              example: '1'
              description: 'The number of farmer identifiers in the set'
           farmerIds:
               type: array
               description: 'The list of farmer identifiers, specified as an array'
               items:
                 type: string
    farmerSearchCriteria:
       type: object
       description: 'Object defining the criteria to search farmers by in AIP Datasets; the AIU seeks data of all farmers that satisfy these criteria'
       properties:
           queryType:
              type: string
              default: 'PREDICATE_QUERY'
              description: 'Query type defining the search expression; only simple expressions involving two comparison checks concatenated using a single logical operator (AND, OR or NOT) are supported in this version. (the schema for "query" is accordingly defined)'
           expression:
              $ref: '#/components/schemas/agristack_farmer_id_v0_query'
    agristack_crop_v0_get_data:
       type: object
       properties:
          query_name:
            type: string
            description: 'Name of the Use Case as defined in Agri Stack API Documentation.'
            example: 'agristack_crop_v0_get_data'
          mapper_id:
            type: string
            example: 'i6:o2'
            description: 'each use case has been assigned with a unique mapper ID in Agri Stack documentation. The data seeker needs to provide that ID here.'
          query_params:
            type: array
            items:
              $ref: paths/requestResponseSchemas.yaml#/components/schemas/agristack_crop_v0_query
  responses:
    HttpErrorResponse:
      description: HTTP layer error details
      content:
        application/json:
          schema:
            type: object
            description: 'HTTP transport layer error codes. Used by components like gateways, LB responding with HTTP status codes 1xx, 2xx, 3xx, 4xx and 5xx'
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                    description: error code
                  message:
                    type: string
                    description: error message
    Response:
      description: Acknowledgement of message received after successful validation of message and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: object
                properties:
                  ack_status:
                    type: string
                    description: |
                      1. ACK: If the request is valid (for basic checks) and async callback (i.e webhook) will be invoked by receiver back to the sender.
                      2. NACK: If the request is valid (for basic checks) and there are no further updates from receiver back to the sender.
                      3. ERR: If the request is invalid and reciver can't process the request. error object holds error code, message.
                    enum:
                      - ACK
                      - NACK
                      - ERR
                  timestamp:
                    $ref: '#/components/schemas/timestamp'
                  error:
                    $ref: '#/components/schemas/error'
                  correlation_id:
                    $ref: >-
                      #/components/schemas/search_response/properties/correlation_id
                required:
                  - ack_status
                  - timestamp
                  - correlation_id
  securitySchemes:
    authorization:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: Authenticating using session token issued by platform/system API gateway or auth services issuing session token APIs using client ID & secret
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic